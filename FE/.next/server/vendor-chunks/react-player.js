/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-player";
exports.ids = ["vendor-chunks/react-player"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-player/lib/Player.js":
/*!*************************************************!*\
  !*** ./node_modules/react-player/lib/Player.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar Player_exports = {};\r\n__export(Player_exports, {\r\n  default: () => Player\r\n});\r\nmodule.exports = __toCommonJS(Player_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\r\nvar import_react_fast_compare = __toESM(__webpack_require__(/*! react-fast-compare */ \"(ssr)/./node_modules/react-fast-compare/index.js\"));\r\nvar import_props = __webpack_require__(/*! ./props */ \"(ssr)/./node_modules/react-player/lib/props.js\");\r\nvar import_utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/react-player/lib/utils.js\");\r\nconst SEEK_ON_PLAY_EXPIRY = 5e3;\r\nclass Player extends import_react.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    __publicField(this, \"mounted\", false);\r\n    __publicField(this, \"isReady\", false);\r\n    __publicField(this, \"isPlaying\", false);\r\n    // Track playing state internally to prevent bugs\r\n    __publicField(this, \"isLoading\", true);\r\n    // Use isLoading to prevent onPause when switching URL\r\n    __publicField(this, \"loadOnReady\", null);\r\n    __publicField(this, \"startOnPlay\", true);\r\n    __publicField(this, \"seekOnPlay\", null);\r\n    __publicField(this, \"onDurationCalled\", false);\r\n    __publicField(this, \"handlePlayerMount\", (player) => {\r\n      if (this.player) {\r\n        this.progress();\r\n        return;\r\n      }\r\n      this.player = player;\r\n      this.player.load(this.props.url);\r\n      this.progress();\r\n    });\r\n    __publicField(this, \"getInternalPlayer\", (key) => {\r\n      if (!this.player)\r\n        return null;\r\n      return this.player[key];\r\n    });\r\n    __publicField(this, \"progress\", () => {\r\n      if (this.props.url && this.player && this.isReady) {\r\n        const playedSeconds = this.getCurrentTime() || 0;\r\n        const loadedSeconds = this.getSecondsLoaded();\r\n        const duration = this.getDuration();\r\n        if (duration) {\r\n          const progress = {\r\n            playedSeconds,\r\n            played: playedSeconds / duration\r\n          };\r\n          if (loadedSeconds !== null) {\r\n            progress.loadedSeconds = loadedSeconds;\r\n            progress.loaded = loadedSeconds / duration;\r\n          }\r\n          if (progress.playedSeconds !== this.prevPlayed || progress.loadedSeconds !== this.prevLoaded) {\r\n            this.props.onProgress(progress);\r\n          }\r\n          this.prevPlayed = progress.playedSeconds;\r\n          this.prevLoaded = progress.loadedSeconds;\r\n        }\r\n      }\r\n      this.progressTimeout = setTimeout(this.progress, this.props.progressFrequency || this.props.progressInterval);\r\n    });\r\n    __publicField(this, \"handleReady\", () => {\r\n      if (!this.mounted)\r\n        return;\r\n      this.isReady = true;\r\n      this.isLoading = false;\r\n      const { onReady, playing, volume, muted } = this.props;\r\n      onReady();\r\n      if (!muted && volume !== null) {\r\n        this.player.setVolume(volume);\r\n      }\r\n      if (this.loadOnReady) {\r\n        this.player.load(this.loadOnReady, true);\r\n        this.loadOnReady = null;\r\n      } else if (playing) {\r\n        this.player.play();\r\n      }\r\n      this.handleDurationCheck();\r\n    });\r\n    __publicField(this, \"handlePlay\", () => {\r\n      this.isPlaying = true;\r\n      this.isLoading = false;\r\n      const { onStart, onPlay, playbackRate } = this.props;\r\n      if (this.startOnPlay) {\r\n        if (this.player.setPlaybackRate && playbackRate !== 1) {\r\n          this.player.setPlaybackRate(playbackRate);\r\n        }\r\n        onStart();\r\n        this.startOnPlay = false;\r\n      }\r\n      onPlay();\r\n      if (this.seekOnPlay) {\r\n        this.seekTo(this.seekOnPlay);\r\n        this.seekOnPlay = null;\r\n      }\r\n      this.handleDurationCheck();\r\n    });\r\n    __publicField(this, \"handlePause\", (e) => {\r\n      this.isPlaying = false;\r\n      if (!this.isLoading) {\r\n        this.props.onPause(e);\r\n      }\r\n    });\r\n    __publicField(this, \"handleEnded\", () => {\r\n      const { activePlayer, loop, onEnded } = this.props;\r\n      if (activePlayer.loopOnEnded && loop) {\r\n        this.seekTo(0);\r\n      }\r\n      if (!loop) {\r\n        this.isPlaying = false;\r\n        onEnded();\r\n      }\r\n    });\r\n    __publicField(this, \"handleError\", (...args) => {\r\n      this.isLoading = false;\r\n      this.props.onError(...args);\r\n    });\r\n    __publicField(this, \"handleDurationCheck\", () => {\r\n      clearTimeout(this.durationCheckTimeout);\r\n      const duration = this.getDuration();\r\n      if (duration) {\r\n        if (!this.onDurationCalled) {\r\n          this.props.onDuration(duration);\r\n          this.onDurationCalled = true;\r\n        }\r\n      } else {\r\n        this.durationCheckTimeout = setTimeout(this.handleDurationCheck, 100);\r\n      }\r\n    });\r\n    __publicField(this, \"handleLoaded\", () => {\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n  }\r\n  componentWillUnmount() {\r\n    clearTimeout(this.progressTimeout);\r\n    clearTimeout(this.durationCheckTimeout);\r\n    if (this.isReady && this.props.stopOnUnmount) {\r\n      this.player.stop();\r\n      if (this.player.disablePIP) {\r\n        this.player.disablePIP();\r\n      }\r\n    }\r\n    this.mounted = false;\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (!this.player) {\r\n      return;\r\n    }\r\n    const { url, playing, volume, muted, playbackRate, pip, loop, activePlayer, disableDeferredLoading } = this.props;\r\n    if (!(0, import_react_fast_compare.default)(prevProps.url, url)) {\r\n      if (this.isLoading && !activePlayer.forceLoad && !disableDeferredLoading && !(0, import_utils.isMediaStream)(url)) {\r\n        console.warn(`ReactPlayer: the attempt to load ${url} is being deferred until the player has loaded`);\r\n        this.loadOnReady = url;\r\n        return;\r\n      }\r\n      this.isLoading = true;\r\n      this.startOnPlay = true;\r\n      this.onDurationCalled = false;\r\n      this.player.load(url, this.isReady);\r\n    }\r\n    if (!prevProps.playing && playing && !this.isPlaying) {\r\n      this.player.play();\r\n    }\r\n    if (prevProps.playing && !playing && this.isPlaying) {\r\n      this.player.pause();\r\n    }\r\n    if (!prevProps.pip && pip && this.player.enablePIP) {\r\n      this.player.enablePIP();\r\n    }\r\n    if (prevProps.pip && !pip && this.player.disablePIP) {\r\n      this.player.disablePIP();\r\n    }\r\n    if (prevProps.volume !== volume && volume !== null) {\r\n      this.player.setVolume(volume);\r\n    }\r\n    if (prevProps.muted !== muted) {\r\n      if (muted) {\r\n        this.player.mute();\r\n      } else {\r\n        this.player.unmute();\r\n        if (volume !== null) {\r\n          setTimeout(() => this.player.setVolume(volume));\r\n        }\r\n      }\r\n    }\r\n    if (prevProps.playbackRate !== playbackRate && this.player.setPlaybackRate) {\r\n      this.player.setPlaybackRate(playbackRate);\r\n    }\r\n    if (prevProps.loop !== loop && this.player.setLoop) {\r\n      this.player.setLoop(loop);\r\n    }\r\n  }\r\n  getDuration() {\r\n    if (!this.isReady)\r\n      return null;\r\n    return this.player.getDuration();\r\n  }\r\n  getCurrentTime() {\r\n    if (!this.isReady)\r\n      return null;\r\n    return this.player.getCurrentTime();\r\n  }\r\n  getSecondsLoaded() {\r\n    if (!this.isReady)\r\n      return null;\r\n    return this.player.getSecondsLoaded();\r\n  }\r\n  seekTo(amount, type, keepPlaying) {\r\n    if (!this.isReady) {\r\n      if (amount !== 0) {\r\n        this.seekOnPlay = amount;\r\n        setTimeout(() => {\r\n          this.seekOnPlay = null;\r\n        }, SEEK_ON_PLAY_EXPIRY);\r\n      }\r\n      return;\r\n    }\r\n    const isFraction = !type ? amount > 0 && amount < 1 : type === \"fraction\";\r\n    if (isFraction) {\r\n      const duration = this.player.getDuration();\r\n      if (!duration) {\r\n        console.warn(\"ReactPlayer: could not seek using fraction \\u2013\\xA0duration not yet available\");\r\n        return;\r\n      }\r\n      this.player.seekTo(duration * amount, keepPlaying);\r\n      return;\r\n    }\r\n    this.player.seekTo(amount, keepPlaying);\r\n  }\r\n  render() {\r\n    const Player2 = this.props.activePlayer;\r\n    if (!Player2) {\r\n      return null;\r\n    }\r\n    return /* @__PURE__ */ import_react.default.createElement(\r\n      Player2,\r\n      {\r\n        ...this.props,\r\n        onMount: this.handlePlayerMount,\r\n        onReady: this.handleReady,\r\n        onPlay: this.handlePlay,\r\n        onPause: this.handlePause,\r\n        onEnded: this.handleEnded,\r\n        onLoaded: this.handleLoaded,\r\n        onError: this.handleError\r\n      }\r\n    );\r\n  }\r\n}\r\n__publicField(Player, \"displayName\", \"Player\");\r\n__publicField(Player, \"propTypes\", import_props.propTypes);\r\n__publicField(Player, \"defaultProps\", import_props.defaultProps);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/Player.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/Preview.js":
/*!**************************************************!*\
  !*** ./node_modules/react-player/lib/Preview.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar Preview_exports = {};\r\n__export(Preview_exports, {\r\n  default: () => Preview\r\n});\r\nmodule.exports = __toCommonJS(Preview_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\r\nconst ICON_SIZE = \"64px\";\r\nconst cache = {};\r\nclass Preview extends import_react.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    __publicField(this, \"mounted\", false);\r\n    __publicField(this, \"state\", {\r\n      image: null\r\n    });\r\n    __publicField(this, \"handleKeyPress\", (e) => {\r\n      if (e.key === \"Enter\" || e.key === \" \") {\r\n        this.props.onClick();\r\n      }\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    this.fetchImage(this.props);\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    const { url, light } = this.props;\r\n    if (prevProps.url !== url || prevProps.light !== light) {\r\n      this.fetchImage(this.props);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n  fetchImage({ url, light, oEmbedUrl }) {\r\n    if (import_react.default.isValidElement(light)) {\r\n      return;\r\n    }\r\n    if (typeof light === \"string\") {\r\n      this.setState({ image: light });\r\n      return;\r\n    }\r\n    if (cache[url]) {\r\n      this.setState({ image: cache[url] });\r\n      return;\r\n    }\r\n    this.setState({ image: null });\r\n    return window.fetch(oEmbedUrl.replace(\"{url}\", url)).then((response) => response.json()).then((data) => {\r\n      if (data.thumbnail_url && this.mounted) {\r\n        const image = data.thumbnail_url.replace(\"height=100\", \"height=480\").replace(\"-d_295x166\", \"-d_640\");\r\n        this.setState({ image });\r\n        cache[url] = image;\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    const { light, onClick, playIcon, previewTabIndex, previewAriaLabel } = this.props;\r\n    const { image } = this.state;\r\n    const isElement = import_react.default.isValidElement(light);\r\n    const flexCenter = {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\"\r\n    };\r\n    const styles = {\r\n      preview: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundImage: image && !isElement ? `url(${image})` : void 0,\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        cursor: \"pointer\",\r\n        ...flexCenter\r\n      },\r\n      shadow: {\r\n        background: \"radial-gradient(rgb(0, 0, 0, 0.3), rgba(0, 0, 0, 0) 60%)\",\r\n        borderRadius: ICON_SIZE,\r\n        width: ICON_SIZE,\r\n        height: ICON_SIZE,\r\n        position: isElement ? \"absolute\" : void 0,\r\n        ...flexCenter\r\n      },\r\n      playIcon: {\r\n        borderStyle: \"solid\",\r\n        borderWidth: \"16px 0 16px 26px\",\r\n        borderColor: \"transparent transparent transparent white\",\r\n        marginLeft: \"7px\"\r\n      }\r\n    };\r\n    const defaultPlayIcon = /* @__PURE__ */ import_react.default.createElement(\"div\", { style: styles.shadow, className: \"react-player__shadow\" }, /* @__PURE__ */ import_react.default.createElement(\"div\", { style: styles.playIcon, className: \"react-player__play-icon\" }));\r\n    return /* @__PURE__ */ import_react.default.createElement(\r\n      \"div\",\r\n      {\r\n        style: styles.preview,\r\n        className: \"react-player__preview\",\r\n        onClick,\r\n        tabIndex: previewTabIndex,\r\n        onKeyPress: this.handleKeyPress,\r\n        ...previewAriaLabel ? { \"aria-label\": previewAriaLabel } : {}\r\n      },\r\n      isElement ? light : null,\r\n      playIcon || defaultPlayIcon\r\n    );\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/Preview.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/ReactPlayer.js":
/*!******************************************************!*\
  !*** ./node_modules/react-player/lib/ReactPlayer.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar ReactPlayer_exports = {};\r\n__export(ReactPlayer_exports, {\r\n  createReactPlayer: () => createReactPlayer\r\n});\r\nmodule.exports = __toCommonJS(ReactPlayer_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\r\nvar import_deepmerge = __toESM(__webpack_require__(/*! deepmerge */ \"(ssr)/./node_modules/deepmerge/dist/cjs.js\"));\r\nvar import_memoize_one = __toESM(__webpack_require__(/*! memoize-one */ \"(ssr)/./node_modules/memoize-one/dist/memoize-one.esm.js\"));\r\nvar import_react_fast_compare = __toESM(__webpack_require__(/*! react-fast-compare */ \"(ssr)/./node_modules/react-fast-compare/index.js\"));\r\nvar import_props = __webpack_require__(/*! ./props */ \"(ssr)/./node_modules/react-player/lib/props.js\");\r\nvar import_utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/react-player/lib/utils.js\");\r\nvar import_Player = __toESM(__webpack_require__(/*! ./Player */ \"(ssr)/./node_modules/react-player/lib/Player.js\"));\r\nconst Preview = (0, import_utils.lazy)(() => __webpack_require__.e(/*! import() | reactPlayerPreview */ \"vendor-chunks/react-player\").then(__webpack_require__.t.bind(__webpack_require__, /*! ./Preview */ \"(ssr)/./node_modules/react-player/lib/Preview.js\", 23)));\r\nconst IS_BROWSER = typeof window !== \"undefined\" && window.document && typeof document !== \"undefined\";\r\nconst IS_GLOBAL = typeof global !== \"undefined\" && global.window && global.window.document;\r\nconst SUPPORTED_PROPS = Object.keys(import_props.propTypes);\r\nconst UniversalSuspense = IS_BROWSER || IS_GLOBAL ? import_react.Suspense : () => null;\r\nconst customPlayers = [];\r\nconst createReactPlayer = (players, fallback) => {\r\n  var _a;\r\n  return _a = class extends import_react.Component {\r\n    constructor() {\r\n      super(...arguments);\r\n      __publicField(this, \"state\", {\r\n        showPreview: !!this.props.light\r\n      });\r\n      // Use references, as refs is used by React\r\n      __publicField(this, \"references\", {\r\n        wrapper: (wrapper) => {\r\n          this.wrapper = wrapper;\r\n        },\r\n        player: (player) => {\r\n          this.player = player;\r\n        }\r\n      });\r\n      __publicField(this, \"handleClickPreview\", (e) => {\r\n        this.setState({ showPreview: false });\r\n        this.props.onClickPreview(e);\r\n      });\r\n      __publicField(this, \"showPreview\", () => {\r\n        this.setState({ showPreview: true });\r\n      });\r\n      __publicField(this, \"getDuration\", () => {\r\n        if (!this.player)\r\n          return null;\r\n        return this.player.getDuration();\r\n      });\r\n      __publicField(this, \"getCurrentTime\", () => {\r\n        if (!this.player)\r\n          return null;\r\n        return this.player.getCurrentTime();\r\n      });\r\n      __publicField(this, \"getSecondsLoaded\", () => {\r\n        if (!this.player)\r\n          return null;\r\n        return this.player.getSecondsLoaded();\r\n      });\r\n      __publicField(this, \"getInternalPlayer\", (key = \"player\") => {\r\n        if (!this.player)\r\n          return null;\r\n        return this.player.getInternalPlayer(key);\r\n      });\r\n      __publicField(this, \"seekTo\", (fraction, type, keepPlaying) => {\r\n        if (!this.player)\r\n          return null;\r\n        this.player.seekTo(fraction, type, keepPlaying);\r\n      });\r\n      __publicField(this, \"handleReady\", () => {\r\n        this.props.onReady(this);\r\n      });\r\n      __publicField(this, \"getActivePlayer\", (0, import_memoize_one.default)((url) => {\r\n        for (const player of [...customPlayers, ...players]) {\r\n          if (player.canPlay(url)) {\r\n            return player;\r\n          }\r\n        }\r\n        if (fallback) {\r\n          return fallback;\r\n        }\r\n        return null;\r\n      }));\r\n      __publicField(this, \"getConfig\", (0, import_memoize_one.default)((url, key) => {\r\n        const { config } = this.props;\r\n        return import_deepmerge.default.all([\r\n          import_props.defaultProps.config,\r\n          import_props.defaultProps.config[key] || {},\r\n          config,\r\n          config[key] || {}\r\n        ]);\r\n      }));\r\n      __publicField(this, \"getAttributes\", (0, import_memoize_one.default)((url) => {\r\n        return (0, import_utils.omit)(this.props, SUPPORTED_PROPS);\r\n      }));\r\n      __publicField(this, \"renderActivePlayer\", (url) => {\r\n        if (!url)\r\n          return null;\r\n        const player = this.getActivePlayer(url);\r\n        if (!player)\r\n          return null;\r\n        const config = this.getConfig(url, player.key);\r\n        return /* @__PURE__ */ import_react.default.createElement(\r\n          import_Player.default,\r\n          {\r\n            ...this.props,\r\n            key: player.key,\r\n            ref: this.references.player,\r\n            config,\r\n            activePlayer: player.lazyPlayer || player,\r\n            onReady: this.handleReady\r\n          }\r\n        );\r\n      });\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n      return !(0, import_react_fast_compare.default)(this.props, nextProps) || !(0, import_react_fast_compare.default)(this.state, nextState);\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n      const { light } = this.props;\r\n      if (!prevProps.light && light) {\r\n        this.setState({ showPreview: true });\r\n      }\r\n      if (prevProps.light && !light) {\r\n        this.setState({ showPreview: false });\r\n      }\r\n    }\r\n    renderPreview(url) {\r\n      if (!url)\r\n        return null;\r\n      const { light, playIcon, previewTabIndex, oEmbedUrl, previewAriaLabel } = this.props;\r\n      return /* @__PURE__ */ import_react.default.createElement(\r\n        Preview,\r\n        {\r\n          url,\r\n          light,\r\n          playIcon,\r\n          previewTabIndex,\r\n          previewAriaLabel,\r\n          oEmbedUrl,\r\n          onClick: this.handleClickPreview\r\n        }\r\n      );\r\n    }\r\n    render() {\r\n      const { url, style, width, height, fallback: fallback2, wrapper: Wrapper } = this.props;\r\n      const { showPreview } = this.state;\r\n      const attributes = this.getAttributes(url);\r\n      const wrapperRef = typeof Wrapper === \"string\" ? this.references.wrapper : void 0;\r\n      return /* @__PURE__ */ import_react.default.createElement(Wrapper, { ref: wrapperRef, style: { ...style, width, height }, ...attributes }, /* @__PURE__ */ import_react.default.createElement(UniversalSuspense, { fallback: fallback2 }, showPreview ? this.renderPreview(url) : this.renderActivePlayer(url)));\r\n    }\r\n  }, __publicField(_a, \"displayName\", \"ReactPlayer\"), __publicField(_a, \"propTypes\", import_props.propTypes), __publicField(_a, \"defaultProps\", import_props.defaultProps), __publicField(_a, \"addCustomPlayer\", (player) => {\r\n    customPlayers.push(player);\r\n  }), __publicField(_a, \"removeCustomPlayers\", () => {\r\n    customPlayers.length = 0;\r\n  }), __publicField(_a, \"canPlay\", (url) => {\r\n    for (const Player2 of [...customPlayers, ...players]) {\r\n      if (Player2.canPlay(url)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }), __publicField(_a, \"canEnablePIP\", (url) => {\r\n    for (const Player2 of [...customPlayers, ...players]) {\r\n      if (Player2.canEnablePIP && Player2.canEnablePIP(url)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }), _a;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/ReactPlayer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/index.js":
/*!************************************************!*\
  !*** ./node_modules/react-player/lib/index.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar src_exports = {};\r\n__export(src_exports, {\r\n  default: () => src_default\r\n});\r\nmodule.exports = __toCommonJS(src_exports);\r\nvar import_players = __toESM(__webpack_require__(/*! ./players */ \"(ssr)/./node_modules/react-player/lib/players/index.js\"));\r\nvar import_ReactPlayer = __webpack_require__(/*! ./ReactPlayer */ \"(ssr)/./node_modules/react-player/lib/ReactPlayer.js\");\r\nconst fallback = import_players.default[import_players.default.length - 1];\r\nvar src_default = (0, import_ReactPlayer.createReactPlayer)(import_players.default, fallback);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtcGxheWVyL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGtDQUFrQztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDRGQUE0RjtBQUN6SDtBQUNBO0FBQ0E7QUFDQSxtR0FBbUc7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsOEJBQThCO0FBQ3ZHO0FBQ0E7QUFDQSxvREFBb0Qsa0JBQWtCLGFBQWE7QUFDbkY7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsNkJBQTZCLG1CQUFPLENBQUMseUVBQVc7QUFDaEQseUJBQXlCLG1CQUFPLENBQUMsMkVBQWU7QUFDaEQ7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JldmVsby8uL25vZGVfbW9kdWxlcy9yZWFjdC1wbGF5ZXIvbGliL2luZGV4LmpzPzI5ZjAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fY3JlYXRlID0gT2JqZWN0LmNyZWF0ZTtcclxudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcclxudmFyIF9fZ2V0T3duUHJvcERlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xyXG52YXIgX19nZXRPd25Qcm9wTmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcclxudmFyIF9fZ2V0UHJvdG9PZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcclxudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XHJcbnZhciBfX2V4cG9ydCA9ICh0YXJnZXQsIGFsbCkgPT4ge1xyXG4gIGZvciAodmFyIG5hbWUgaW4gYWxsKVxyXG4gICAgX19kZWZQcm9wKHRhcmdldCwgbmFtZSwgeyBnZXQ6IGFsbFtuYW1lXSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcclxufTtcclxudmFyIF9fY29weVByb3BzID0gKHRvLCBmcm9tLCBleGNlcHQsIGRlc2MpID0+IHtcclxuICBpZiAoZnJvbSAmJiB0eXBlb2YgZnJvbSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgZnJvbSA9PT0gXCJmdW5jdGlvblwiKSB7XHJcbiAgICBmb3IgKGxldCBrZXkgb2YgX19nZXRPd25Qcm9wTmFtZXMoZnJvbSkpXHJcbiAgICAgIGlmICghX19oYXNPd25Qcm9wLmNhbGwodG8sIGtleSkgJiYga2V5ICE9PSBleGNlcHQpXHJcbiAgICAgICAgX19kZWZQcm9wKHRvLCBrZXksIHsgZ2V0OiAoKSA9PiBmcm9tW2tleV0sIGVudW1lcmFibGU6ICEoZGVzYyA9IF9fZ2V0T3duUHJvcERlc2MoZnJvbSwga2V5KSkgfHwgZGVzYy5lbnVtZXJhYmxlIH0pO1xyXG4gIH1cclxuICByZXR1cm4gdG87XHJcbn07XHJcbnZhciBfX3RvRVNNID0gKG1vZCwgaXNOb2RlTW9kZSwgdGFyZ2V0KSA9PiAodGFyZ2V0ID0gbW9kICE9IG51bGwgPyBfX2NyZWF0ZShfX2dldFByb3RvT2YobW9kKSkgOiB7fSwgX19jb3B5UHJvcHMoXHJcbiAgLy8gSWYgdGhlIGltcG9ydGVyIGlzIGluIG5vZGUgY29tcGF0aWJpbGl0eSBtb2RlIG9yIHRoaXMgaXMgbm90IGFuIEVTTVxyXG4gIC8vIGZpbGUgdGhhdCBoYXMgYmVlbiBjb252ZXJ0ZWQgdG8gYSBDb21tb25KUyBmaWxlIHVzaW5nIGEgQmFiZWwtXHJcbiAgLy8gY29tcGF0aWJsZSB0cmFuc2Zvcm0gKGkuZS4gXCJfX2VzTW9kdWxlXCIgaGFzIG5vdCBiZWVuIHNldCksIHRoZW4gc2V0XHJcbiAgLy8gXCJkZWZhdWx0XCIgdG8gdGhlIENvbW1vbkpTIFwibW9kdWxlLmV4cG9ydHNcIiBmb3Igbm9kZSBjb21wYXRpYmlsaXR5LlxyXG4gIGlzTm9kZU1vZGUgfHwgIW1vZCB8fCAhbW9kLl9fZXNNb2R1bGUgPyBfX2RlZlByb3AodGFyZ2V0LCBcImRlZmF1bHRcIiwgeyB2YWx1ZTogbW9kLCBlbnVtZXJhYmxlOiB0cnVlIH0pIDogdGFyZ2V0LFxyXG4gIG1vZFxyXG4pKTtcclxudmFyIF9fdG9Db21tb25KUyA9IChtb2QpID0+IF9fY29weVByb3BzKF9fZGVmUHJvcCh7fSwgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSksIG1vZCk7XHJcbnZhciBzcmNfZXhwb3J0cyA9IHt9O1xyXG5fX2V4cG9ydChzcmNfZXhwb3J0cywge1xyXG4gIGRlZmF1bHQ6ICgpID0+IHNyY19kZWZhdWx0XHJcbn0pO1xyXG5tb2R1bGUuZXhwb3J0cyA9IF9fdG9Db21tb25KUyhzcmNfZXhwb3J0cyk7XHJcbnZhciBpbXBvcnRfcGxheWVycyA9IF9fdG9FU00ocmVxdWlyZShcIi4vcGxheWVyc1wiKSk7XHJcbnZhciBpbXBvcnRfUmVhY3RQbGF5ZXIgPSByZXF1aXJlKFwiLi9SZWFjdFBsYXllclwiKTtcclxuY29uc3QgZmFsbGJhY2sgPSBpbXBvcnRfcGxheWVycy5kZWZhdWx0W2ltcG9ydF9wbGF5ZXJzLmRlZmF1bHQubGVuZ3RoIC0gMV07XHJcbnZhciBzcmNfZGVmYXVsdCA9ICgwLCBpbXBvcnRfUmVhY3RQbGF5ZXIuY3JlYXRlUmVhY3RQbGF5ZXIpKGltcG9ydF9wbGF5ZXJzLmRlZmF1bHQsIGZhbGxiYWNrKTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/patterns.js":
/*!***************************************************!*\
  !*** ./node_modules/react-player/lib/patterns.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar patterns_exports = {};\r\n__export(patterns_exports, {\r\n  AUDIO_EXTENSIONS: () => AUDIO_EXTENSIONS,\r\n  DASH_EXTENSIONS: () => DASH_EXTENSIONS,\r\n  FLV_EXTENSIONS: () => FLV_EXTENSIONS,\r\n  HLS_EXTENSIONS: () => HLS_EXTENSIONS,\r\n  MATCH_URL_DAILYMOTION: () => MATCH_URL_DAILYMOTION,\r\n  MATCH_URL_FACEBOOK: () => MATCH_URL_FACEBOOK,\r\n  MATCH_URL_FACEBOOK_WATCH: () => MATCH_URL_FACEBOOK_WATCH,\r\n  MATCH_URL_KALTURA: () => MATCH_URL_KALTURA,\r\n  MATCH_URL_MIXCLOUD: () => MATCH_URL_MIXCLOUD,\r\n  MATCH_URL_MUX: () => MATCH_URL_MUX,\r\n  MATCH_URL_SOUNDCLOUD: () => MATCH_URL_SOUNDCLOUD,\r\n  MATCH_URL_STREAMABLE: () => MATCH_URL_STREAMABLE,\r\n  MATCH_URL_TWITCH_CHANNEL: () => MATCH_URL_TWITCH_CHANNEL,\r\n  MATCH_URL_TWITCH_VIDEO: () => MATCH_URL_TWITCH_VIDEO,\r\n  MATCH_URL_VIDYARD: () => MATCH_URL_VIDYARD,\r\n  MATCH_URL_VIMEO: () => MATCH_URL_VIMEO,\r\n  MATCH_URL_WISTIA: () => MATCH_URL_WISTIA,\r\n  MATCH_URL_YOUTUBE: () => MATCH_URL_YOUTUBE,\r\n  VIDEO_EXTENSIONS: () => VIDEO_EXTENSIONS,\r\n  canPlay: () => canPlay\r\n});\r\nmodule.exports = __toCommonJS(patterns_exports);\r\nvar import_utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/react-player/lib/utils.js\");\r\nconst MATCH_URL_YOUTUBE = /(?:youtu\\.be\\/|youtube(?:-nocookie|education)?\\.com\\/(?:embed\\/|v\\/|watch\\/|watch\\?v=|watch\\?.+&v=|shorts\\/|live\\/))((\\w|-){11})|youtube\\.com\\/playlist\\?list=|youtube\\.com\\/user\\//;\r\nconst MATCH_URL_SOUNDCLOUD = /(?:soundcloud\\.com|snd\\.sc)\\/[^.]+$/;\r\nconst MATCH_URL_VIMEO = /vimeo\\.com\\/(?!progressive_redirect).+/;\r\nconst MATCH_URL_MUX = /stream\\.mux\\.com\\/(?!\\w+\\.m3u8)(\\w+)/;\r\nconst MATCH_URL_FACEBOOK = /^https?:\\/\\/(www\\.)?facebook\\.com.*\\/(video(s)?|watch|story)(\\.php?|\\/).+$/;\r\nconst MATCH_URL_FACEBOOK_WATCH = /^https?:\\/\\/fb\\.watch\\/.+$/;\r\nconst MATCH_URL_STREAMABLE = /streamable\\.com\\/([a-z0-9]+)$/;\r\nconst MATCH_URL_WISTIA = /(?:wistia\\.(?:com|net)|wi\\.st)\\/(?:medias|embed)\\/(?:iframe\\/)?([^?]+)/;\r\nconst MATCH_URL_TWITCH_VIDEO = /(?:www\\.|go\\.)?twitch\\.tv\\/videos\\/(\\d+)($|\\?)/;\r\nconst MATCH_URL_TWITCH_CHANNEL = /(?:www\\.|go\\.)?twitch\\.tv\\/([a-zA-Z0-9_]+)($|\\?)/;\r\nconst MATCH_URL_DAILYMOTION = /^(?:(?:https?):)?(?:\\/\\/)?(?:www\\.)?(?:(?:dailymotion\\.com(?:\\/embed)?\\/video)|dai\\.ly)\\/([a-zA-Z0-9]+)(?:_[\\w_-]+)?(?:[\\w.#_-]+)?/;\r\nconst MATCH_URL_MIXCLOUD = /mixcloud\\.com\\/([^/]+\\/[^/]+)/;\r\nconst MATCH_URL_VIDYARD = /vidyard.com\\/(?:watch\\/)?([a-zA-Z0-9-_]+)/;\r\nconst MATCH_URL_KALTURA = /^https?:\\/\\/[a-zA-Z]+\\.kaltura.(com|org)\\/p\\/([0-9]+)\\/sp\\/([0-9]+)00\\/embedIframeJs\\/uiconf_id\\/([0-9]+)\\/partner_id\\/([0-9]+)(.*)entry_id.([a-zA-Z0-9-_].*)$/;\r\nconst AUDIO_EXTENSIONS = /\\.(m4a|m4b|mp4a|mpga|mp2|mp2a|mp3|m2a|m3a|wav|weba|aac|oga|spx)($|\\?)/i;\r\nconst VIDEO_EXTENSIONS = /\\.(mp4|og[gv]|webm|mov|m4v)(#t=[,\\d+]+)?($|\\?)/i;\r\nconst HLS_EXTENSIONS = /\\.(m3u8)($|\\?)/i;\r\nconst DASH_EXTENSIONS = /\\.(mpd)($|\\?)/i;\r\nconst FLV_EXTENSIONS = /\\.(flv)($|\\?)/i;\r\nconst canPlayFile = (url) => {\r\n  if (url instanceof Array) {\r\n    for (const item of url) {\r\n      if (typeof item === \"string\" && canPlayFile(item)) {\r\n        return true;\r\n      }\r\n      if (canPlayFile(item.src)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  if ((0, import_utils.isMediaStream)(url) || (0, import_utils.isBlobUrl)(url)) {\r\n    return true;\r\n  }\r\n  return AUDIO_EXTENSIONS.test(url) || VIDEO_EXTENSIONS.test(url) || HLS_EXTENSIONS.test(url) || DASH_EXTENSIONS.test(url) || FLV_EXTENSIONS.test(url);\r\n};\r\nconst canPlay = {\r\n  youtube: (url) => {\r\n    if (url instanceof Array) {\r\n      return url.every((item) => MATCH_URL_YOUTUBE.test(item));\r\n    }\r\n    return MATCH_URL_YOUTUBE.test(url);\r\n  },\r\n  soundcloud: (url) => MATCH_URL_SOUNDCLOUD.test(url) && !AUDIO_EXTENSIONS.test(url),\r\n  vimeo: (url) => MATCH_URL_VIMEO.test(url) && !VIDEO_EXTENSIONS.test(url) && !HLS_EXTENSIONS.test(url),\r\n  mux: (url) => MATCH_URL_MUX.test(url),\r\n  facebook: (url) => MATCH_URL_FACEBOOK.test(url) || MATCH_URL_FACEBOOK_WATCH.test(url),\r\n  streamable: (url) => MATCH_URL_STREAMABLE.test(url),\r\n  wistia: (url) => MATCH_URL_WISTIA.test(url),\r\n  twitch: (url) => MATCH_URL_TWITCH_VIDEO.test(url) || MATCH_URL_TWITCH_CHANNEL.test(url),\r\n  dailymotion: (url) => MATCH_URL_DAILYMOTION.test(url),\r\n  mixcloud: (url) => MATCH_URL_MIXCLOUD.test(url),\r\n  vidyard: (url) => MATCH_URL_VIDYARD.test(url),\r\n  kaltura: (url) => MATCH_URL_KALTURA.test(url),\r\n  file: canPlayFile\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/patterns.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/players/DailyMotion.js":
/*!**************************************************************!*\
  !*** ./node_modules/react-player/lib/players/DailyMotion.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar DailyMotion_exports = {};\r\n__export(DailyMotion_exports, {\r\n  default: () => DailyMotion\r\n});\r\nmodule.exports = __toCommonJS(DailyMotion_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\r\nvar import_utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/react-player/lib/utils.js\");\r\nvar import_patterns = __webpack_require__(/*! ../patterns */ \"(ssr)/./node_modules/react-player/lib/patterns.js\");\r\nconst SDK_URL = \"https://api.dmcdn.net/all.js\";\r\nconst SDK_GLOBAL = \"DM\";\r\nconst SDK_GLOBAL_READY = \"dmAsyncInit\";\r\nclass DailyMotion extends import_react.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\r\n    __publicField(this, \"onDurationChange\", () => {\r\n      const duration = this.getDuration();\r\n      this.props.onDuration(duration);\r\n    });\r\n    __publicField(this, \"mute\", () => {\r\n      this.callPlayer(\"setMuted\", true);\r\n    });\r\n    __publicField(this, \"unmute\", () => {\r\n      this.callPlayer(\"setMuted\", false);\r\n    });\r\n    __publicField(this, \"ref\", (container) => {\r\n      this.container = container;\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onMount && this.props.onMount(this);\r\n  }\r\n  load(url) {\r\n    const { controls, config, onError, playing } = this.props;\r\n    const [, id] = url.match(import_patterns.MATCH_URL_DAILYMOTION);\r\n    if (this.player) {\r\n      this.player.load(id, {\r\n        start: (0, import_utils.parseStartTime)(url),\r\n        autoplay: playing\r\n      });\r\n      return;\r\n    }\r\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY, (DM) => DM.player).then((DM) => {\r\n      if (!this.container)\r\n        return;\r\n      const Player = DM.player;\r\n      this.player = new Player(this.container, {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        video: id,\r\n        params: {\r\n          controls,\r\n          autoplay: this.props.playing,\r\n          mute: this.props.muted,\r\n          start: (0, import_utils.parseStartTime)(url),\r\n          origin: window.location.origin,\r\n          ...config.params\r\n        },\r\n        events: {\r\n          apiready: this.props.onReady,\r\n          seeked: () => this.props.onSeek(this.player.currentTime),\r\n          video_end: this.props.onEnded,\r\n          durationchange: this.onDurationChange,\r\n          pause: this.props.onPause,\r\n          playing: this.props.onPlay,\r\n          waiting: this.props.onBuffer,\r\n          error: (event) => onError(event)\r\n        }\r\n      });\r\n    }, onError);\r\n  }\r\n  play() {\r\n    this.callPlayer(\"play\");\r\n  }\r\n  pause() {\r\n    this.callPlayer(\"pause\");\r\n  }\r\n  stop() {\r\n  }\r\n  seekTo(seconds, keepPlaying = true) {\r\n    this.callPlayer(\"seek\", seconds);\r\n    if (!keepPlaying) {\r\n      this.pause();\r\n    }\r\n  }\r\n  setVolume(fraction) {\r\n    this.callPlayer(\"setVolume\", fraction);\r\n  }\r\n  getDuration() {\r\n    return this.player.duration || null;\r\n  }\r\n  getCurrentTime() {\r\n    return this.player.currentTime;\r\n  }\r\n  getSecondsLoaded() {\r\n    return this.player.bufferedTime;\r\n  }\r\n  render() {\r\n    const { display } = this.props;\r\n    const style = {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display\r\n    };\r\n    return /* @__PURE__ */ import_react.default.createElement(\"div\", { style }, /* @__PURE__ */ import_react.default.createElement(\"div\", { ref: this.ref }));\r\n  }\r\n}\r\n__publicField(DailyMotion, \"displayName\", \"DailyMotion\");\r\n__publicField(DailyMotion, \"canPlay\", import_patterns.canPlay.dailymotion);\r\n__publicField(DailyMotion, \"loopOnEnded\", true);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtcGxheWVyL2xpYi9wbGF5ZXJzL0RhaWx5TW90aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDQTtBQUNBLDhCQUE4QixrQ0FBa0M7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw0RkFBNEY7QUFDekg7QUFDQTtBQUNBO0FBQ0EsbUdBQW1HO0FBQ25HO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLDhCQUE4QjtBQUN2RztBQUNBO0FBQ0Esb0RBQW9ELGtCQUFrQixhQUFhO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMkJBQTJCLG1CQUFPLENBQUMsd0dBQU87QUFDMUMsbUJBQW1CLG1CQUFPLENBQUMsZ0VBQVU7QUFDckMsc0JBQXNCLG1CQUFPLENBQUMsc0VBQWE7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVkscUNBQXFDO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFVBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVFQUF1RSxPQUFPLDhEQUE4RCxlQUFlO0FBQzNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXZlbG8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcGxheWVyL2xpYi9wbGF5ZXJzL0RhaWx5TW90aW9uLmpzPzIzMWQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fY3JlYXRlID0gT2JqZWN0LmNyZWF0ZTtcclxudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcclxudmFyIF9fZ2V0T3duUHJvcERlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xyXG52YXIgX19nZXRPd25Qcm9wTmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcclxudmFyIF9fZ2V0UHJvdG9PZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcclxudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XHJcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcclxudmFyIF9fZXhwb3J0ID0gKHRhcmdldCwgYWxsKSA9PiB7XHJcbiAgZm9yICh2YXIgbmFtZSBpbiBhbGwpXHJcbiAgICBfX2RlZlByb3AodGFyZ2V0LCBuYW1lLCB7IGdldDogYWxsW25hbWVdLCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xyXG59O1xyXG52YXIgX19jb3B5UHJvcHMgPSAodG8sIGZyb20sIGV4Y2VwdCwgZGVzYykgPT4ge1xyXG4gIGlmIChmcm9tICYmIHR5cGVvZiBmcm9tID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBmcm9tID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgIGZvciAobGV0IGtleSBvZiBfX2dldE93blByb3BOYW1lcyhmcm9tKSlcclxuICAgICAgaWYgKCFfX2hhc093blByb3AuY2FsbCh0bywga2V5KSAmJiBrZXkgIT09IGV4Y2VwdClcclxuICAgICAgICBfX2RlZlByb3AodG8sIGtleSwgeyBnZXQ6ICgpID0+IGZyb21ba2V5XSwgZW51bWVyYWJsZTogIShkZXNjID0gX19nZXRPd25Qcm9wRGVzYyhmcm9tLCBrZXkpKSB8fCBkZXNjLmVudW1lcmFibGUgfSk7XHJcbiAgfVxyXG4gIHJldHVybiB0bztcclxufTtcclxudmFyIF9fdG9FU00gPSAobW9kLCBpc05vZGVNb2RlLCB0YXJnZXQpID0+ICh0YXJnZXQgPSBtb2QgIT0gbnVsbCA/IF9fY3JlYXRlKF9fZ2V0UHJvdG9PZihtb2QpKSA6IHt9LCBfX2NvcHlQcm9wcyhcclxuICAvLyBJZiB0aGUgaW1wb3J0ZXIgaXMgaW4gbm9kZSBjb21wYXRpYmlsaXR5IG1vZGUgb3IgdGhpcyBpcyBub3QgYW4gRVNNXHJcbiAgLy8gZmlsZSB0aGF0IGhhcyBiZWVuIGNvbnZlcnRlZCB0byBhIENvbW1vbkpTIGZpbGUgdXNpbmcgYSBCYWJlbC1cclxuICAvLyBjb21wYXRpYmxlIHRyYW5zZm9ybSAoaS5lLiBcIl9fZXNNb2R1bGVcIiBoYXMgbm90IGJlZW4gc2V0KSwgdGhlbiBzZXRcclxuICAvLyBcImRlZmF1bHRcIiB0byB0aGUgQ29tbW9uSlMgXCJtb2R1bGUuZXhwb3J0c1wiIGZvciBub2RlIGNvbXBhdGliaWxpdHkuXHJcbiAgaXNOb2RlTW9kZSB8fCAhbW9kIHx8ICFtb2QuX19lc01vZHVsZSA/IF9fZGVmUHJvcCh0YXJnZXQsIFwiZGVmYXVsdFwiLCB7IHZhbHVlOiBtb2QsIGVudW1lcmFibGU6IHRydWUgfSkgOiB0YXJnZXQsXHJcbiAgbW9kXHJcbikpO1xyXG52YXIgX190b0NvbW1vbkpTID0gKG1vZCkgPT4gX19jb3B5UHJvcHMoX19kZWZQcm9wKHt9LCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KSwgbW9kKTtcclxudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiB7XHJcbiAgX19kZWZOb3JtYWxQcm9wKG9iaiwgdHlwZW9mIGtleSAhPT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcclxuICByZXR1cm4gdmFsdWU7XHJcbn07XHJcbnZhciBEYWlseU1vdGlvbl9leHBvcnRzID0ge307XHJcbl9fZXhwb3J0KERhaWx5TW90aW9uX2V4cG9ydHMsIHtcclxuICBkZWZhdWx0OiAoKSA9PiBEYWlseU1vdGlvblxyXG59KTtcclxubW9kdWxlLmV4cG9ydHMgPSBfX3RvQ29tbW9uSlMoRGFpbHlNb3Rpb25fZXhwb3J0cyk7XHJcbnZhciBpbXBvcnRfcmVhY3QgPSBfX3RvRVNNKHJlcXVpcmUoXCJyZWFjdFwiKSk7XHJcbnZhciBpbXBvcnRfdXRpbHMgPSByZXF1aXJlKFwiLi4vdXRpbHNcIik7XHJcbnZhciBpbXBvcnRfcGF0dGVybnMgPSByZXF1aXJlKFwiLi4vcGF0dGVybnNcIik7XHJcbmNvbnN0IFNES19VUkwgPSBcImh0dHBzOi8vYXBpLmRtY2RuLm5ldC9hbGwuanNcIjtcclxuY29uc3QgU0RLX0dMT0JBTCA9IFwiRE1cIjtcclxuY29uc3QgU0RLX0dMT0JBTF9SRUFEWSA9IFwiZG1Bc3luY0luaXRcIjtcclxuY2xhc3MgRGFpbHlNb3Rpb24gZXh0ZW5kcyBpbXBvcnRfcmVhY3QuQ29tcG9uZW50IHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XHJcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY2FsbFBsYXllclwiLCBpbXBvcnRfdXRpbHMuY2FsbFBsYXllcik7XHJcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwib25EdXJhdGlvbkNoYW5nZVwiLCAoKSA9PiB7XHJcbiAgICAgIGNvbnN0IGR1cmF0aW9uID0gdGhpcy5nZXREdXJhdGlvbigpO1xyXG4gICAgICB0aGlzLnByb3BzLm9uRHVyYXRpb24oZHVyYXRpb24pO1xyXG4gICAgfSk7XHJcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwibXV0ZVwiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuY2FsbFBsYXllcihcInNldE11dGVkXCIsIHRydWUpO1xyXG4gICAgfSk7XHJcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidW5tdXRlXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5jYWxsUGxheWVyKFwic2V0TXV0ZWRcIiwgZmFsc2UpO1xyXG4gICAgfSk7XHJcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicmVmXCIsIChjb250YWluZXIpID0+IHtcclxuICAgICAgdGhpcy5jb250YWluZXIgPSBjb250YWluZXI7XHJcbiAgICB9KTtcclxuICB9XHJcbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XHJcbiAgICB0aGlzLnByb3BzLm9uTW91bnQgJiYgdGhpcy5wcm9wcy5vbk1vdW50KHRoaXMpO1xyXG4gIH1cclxuICBsb2FkKHVybCkge1xyXG4gICAgY29uc3QgeyBjb250cm9scywgY29uZmlnLCBvbkVycm9yLCBwbGF5aW5nIH0gPSB0aGlzLnByb3BzO1xyXG4gICAgY29uc3QgWywgaWRdID0gdXJsLm1hdGNoKGltcG9ydF9wYXR0ZXJucy5NQVRDSF9VUkxfREFJTFlNT1RJT04pO1xyXG4gICAgaWYgKHRoaXMucGxheWVyKSB7XHJcbiAgICAgIHRoaXMucGxheWVyLmxvYWQoaWQsIHtcclxuICAgICAgICBzdGFydDogKDAsIGltcG9ydF91dGlscy5wYXJzZVN0YXJ0VGltZSkodXJsKSxcclxuICAgICAgICBhdXRvcGxheTogcGxheWluZ1xyXG4gICAgICB9KTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgKDAsIGltcG9ydF91dGlscy5nZXRTREspKFNES19VUkwsIFNES19HTE9CQUwsIFNES19HTE9CQUxfUkVBRFksIChETSkgPT4gRE0ucGxheWVyKS50aGVuKChETSkgPT4ge1xyXG4gICAgICBpZiAoIXRoaXMuY29udGFpbmVyKVxyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgY29uc3QgUGxheWVyID0gRE0ucGxheWVyO1xyXG4gICAgICB0aGlzLnBsYXllciA9IG5ldyBQbGF5ZXIodGhpcy5jb250YWluZXIsIHtcclxuICAgICAgICB3aWR0aDogXCIxMDAlXCIsXHJcbiAgICAgICAgaGVpZ2h0OiBcIjEwMCVcIixcclxuICAgICAgICB2aWRlbzogaWQsXHJcbiAgICAgICAgcGFyYW1zOiB7XHJcbiAgICAgICAgICBjb250cm9scyxcclxuICAgICAgICAgIGF1dG9wbGF5OiB0aGlzLnByb3BzLnBsYXlpbmcsXHJcbiAgICAgICAgICBtdXRlOiB0aGlzLnByb3BzLm11dGVkLFxyXG4gICAgICAgICAgc3RhcnQ6ICgwLCBpbXBvcnRfdXRpbHMucGFyc2VTdGFydFRpbWUpKHVybCksXHJcbiAgICAgICAgICBvcmlnaW46IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4sXHJcbiAgICAgICAgICAuLi5jb25maWcucGFyYW1zXHJcbiAgICAgICAgfSxcclxuICAgICAgICBldmVudHM6IHtcclxuICAgICAgICAgIGFwaXJlYWR5OiB0aGlzLnByb3BzLm9uUmVhZHksXHJcbiAgICAgICAgICBzZWVrZWQ6ICgpID0+IHRoaXMucHJvcHMub25TZWVrKHRoaXMucGxheWVyLmN1cnJlbnRUaW1lKSxcclxuICAgICAgICAgIHZpZGVvX2VuZDogdGhpcy5wcm9wcy5vbkVuZGVkLFxyXG4gICAgICAgICAgZHVyYXRpb25jaGFuZ2U6IHRoaXMub25EdXJhdGlvbkNoYW5nZSxcclxuICAgICAgICAgIHBhdXNlOiB0aGlzLnByb3BzLm9uUGF1c2UsXHJcbiAgICAgICAgICBwbGF5aW5nOiB0aGlzLnByb3BzLm9uUGxheSxcclxuICAgICAgICAgIHdhaXRpbmc6IHRoaXMucHJvcHMub25CdWZmZXIsXHJcbiAgICAgICAgICBlcnJvcjogKGV2ZW50KSA9PiBvbkVycm9yKGV2ZW50KVxyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9LCBvbkVycm9yKTtcclxuICB9XHJcbiAgcGxheSgpIHtcclxuICAgIHRoaXMuY2FsbFBsYXllcihcInBsYXlcIik7XHJcbiAgfVxyXG4gIHBhdXNlKCkge1xyXG4gICAgdGhpcy5jYWxsUGxheWVyKFwicGF1c2VcIik7XHJcbiAgfVxyXG4gIHN0b3AoKSB7XHJcbiAgfVxyXG4gIHNlZWtUbyhzZWNvbmRzLCBrZWVwUGxheWluZyA9IHRydWUpIHtcclxuICAgIHRoaXMuY2FsbFBsYXllcihcInNlZWtcIiwgc2Vjb25kcyk7XHJcbiAgICBpZiAoIWtlZXBQbGF5aW5nKSB7XHJcbiAgICAgIHRoaXMucGF1c2UoKTtcclxuICAgIH1cclxuICB9XHJcbiAgc2V0Vm9sdW1lKGZyYWN0aW9uKSB7XHJcbiAgICB0aGlzLmNhbGxQbGF5ZXIoXCJzZXRWb2x1bWVcIiwgZnJhY3Rpb24pO1xyXG4gIH1cclxuICBnZXREdXJhdGlvbigpIHtcclxuICAgIHJldHVybiB0aGlzLnBsYXllci5kdXJhdGlvbiB8fCBudWxsO1xyXG4gIH1cclxuICBnZXRDdXJyZW50VGltZSgpIHtcclxuICAgIHJldHVybiB0aGlzLnBsYXllci5jdXJyZW50VGltZTtcclxuICB9XHJcbiAgZ2V0U2Vjb25kc0xvYWRlZCgpIHtcclxuICAgIHJldHVybiB0aGlzLnBsYXllci5idWZmZXJlZFRpbWU7XHJcbiAgfVxyXG4gIHJlbmRlcigpIHtcclxuICAgIGNvbnN0IHsgZGlzcGxheSB9ID0gdGhpcy5wcm9wcztcclxuICAgIGNvbnN0IHN0eWxlID0ge1xyXG4gICAgICB3aWR0aDogXCIxMDAlXCIsXHJcbiAgICAgIGhlaWdodDogXCIxMDAlXCIsXHJcbiAgICAgIGRpc3BsYXlcclxuICAgIH07XHJcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGltcG9ydF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBzdHlsZSB9LCAvKiBAX19QVVJFX18gKi8gaW1wb3J0X3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHJlZjogdGhpcy5yZWYgfSkpO1xyXG4gIH1cclxufVxyXG5fX3B1YmxpY0ZpZWxkKERhaWx5TW90aW9uLCBcImRpc3BsYXlOYW1lXCIsIFwiRGFpbHlNb3Rpb25cIik7XHJcbl9fcHVibGljRmllbGQoRGFpbHlNb3Rpb24sIFwiY2FuUGxheVwiLCBpbXBvcnRfcGF0dGVybnMuY2FuUGxheS5kYWlseW1vdGlvbik7XHJcbl9fcHVibGljRmllbGQoRGFpbHlNb3Rpb24sIFwibG9vcE9uRW5kZWRcIiwgdHJ1ZSk7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/players/DailyMotion.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/players/Facebook.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-player/lib/players/Facebook.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar Facebook_exports = {};\r\n__export(Facebook_exports, {\r\n  default: () => Facebook\r\n});\r\nmodule.exports = __toCommonJS(Facebook_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\r\nvar import_utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/react-player/lib/utils.js\");\r\nvar import_patterns = __webpack_require__(/*! ../patterns */ \"(ssr)/./node_modules/react-player/lib/patterns.js\");\r\nconst SDK_URL = \"https://connect.facebook.net/en_US/sdk.js\";\r\nconst SDK_GLOBAL = \"FB\";\r\nconst SDK_GLOBAL_READY = \"fbAsyncInit\";\r\nconst PLAYER_ID_PREFIX = \"facebook-player-\";\r\nclass Facebook extends import_react.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\r\n    __publicField(this, \"playerID\", this.props.config.playerId || `${PLAYER_ID_PREFIX}${(0, import_utils.randomString)()}`);\r\n    __publicField(this, \"mute\", () => {\r\n      this.callPlayer(\"mute\");\r\n    });\r\n    __publicField(this, \"unmute\", () => {\r\n      this.callPlayer(\"unmute\");\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onMount && this.props.onMount(this);\r\n  }\r\n  load(url, isReady) {\r\n    if (isReady) {\r\n      (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then((FB) => FB.XFBML.parse());\r\n      return;\r\n    }\r\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then((FB) => {\r\n      FB.init({\r\n        appId: this.props.config.appId,\r\n        xfbml: true,\r\n        version: this.props.config.version\r\n      });\r\n      FB.Event.subscribe(\"xfbml.render\", (msg) => {\r\n        this.props.onLoaded();\r\n      });\r\n      FB.Event.subscribe(\"xfbml.ready\", (msg) => {\r\n        if (msg.type === \"video\" && msg.id === this.playerID) {\r\n          this.player = msg.instance;\r\n          this.player.subscribe(\"startedPlaying\", this.props.onPlay);\r\n          this.player.subscribe(\"paused\", this.props.onPause);\r\n          this.player.subscribe(\"finishedPlaying\", this.props.onEnded);\r\n          this.player.subscribe(\"startedBuffering\", this.props.onBuffer);\r\n          this.player.subscribe(\"finishedBuffering\", this.props.onBufferEnd);\r\n          this.player.subscribe(\"error\", this.props.onError);\r\n          if (this.props.muted) {\r\n            this.callPlayer(\"mute\");\r\n          } else {\r\n            this.callPlayer(\"unmute\");\r\n          }\r\n          this.props.onReady();\r\n          document.getElementById(this.playerID).querySelector(\"iframe\").style.visibility = \"visible\";\r\n        }\r\n      });\r\n    });\r\n  }\r\n  play() {\r\n    this.callPlayer(\"play\");\r\n  }\r\n  pause() {\r\n    this.callPlayer(\"pause\");\r\n  }\r\n  stop() {\r\n  }\r\n  seekTo(seconds, keepPlaying = true) {\r\n    this.callPlayer(\"seek\", seconds);\r\n    if (!keepPlaying) {\r\n      this.pause();\r\n    }\r\n  }\r\n  setVolume(fraction) {\r\n    this.callPlayer(\"setVolume\", fraction);\r\n  }\r\n  getDuration() {\r\n    return this.callPlayer(\"getDuration\");\r\n  }\r\n  getCurrentTime() {\r\n    return this.callPlayer(\"getCurrentPosition\");\r\n  }\r\n  getSecondsLoaded() {\r\n    return null;\r\n  }\r\n  render() {\r\n    const { attributes } = this.props.config;\r\n    const style = {\r\n      width: \"100%\",\r\n      height: \"100%\"\r\n    };\r\n    return /* @__PURE__ */ import_react.default.createElement(\r\n      \"div\",\r\n      {\r\n        style,\r\n        id: this.playerID,\r\n        className: \"fb-video\",\r\n        \"data-href\": this.props.url,\r\n        \"data-autoplay\": this.props.playing ? \"true\" : \"false\",\r\n        \"data-allowfullscreen\": \"true\",\r\n        \"data-controls\": this.props.controls ? \"true\" : \"false\",\r\n        ...attributes\r\n      }\r\n    );\r\n  }\r\n}\r\n__publicField(Facebook, \"displayName\", \"Facebook\");\r\n__publicField(Facebook, \"canPlay\", import_patterns.canPlay.facebook);\r\n__publicField(Facebook, \"loopOnEnded\", true);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/players/Facebook.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/players/FilePlayer.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-player/lib/players/FilePlayer.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar FilePlayer_exports = {};\r\n__export(FilePlayer_exports, {\r\n  default: () => FilePlayer\r\n});\r\nmodule.exports = __toCommonJS(FilePlayer_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\r\nvar import_utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/react-player/lib/utils.js\");\r\nvar import_patterns = __webpack_require__(/*! ../patterns */ \"(ssr)/./node_modules/react-player/lib/patterns.js\");\r\nconst HAS_NAVIGATOR = typeof navigator !== \"undefined\";\r\nconst IS_IPAD_PRO = HAS_NAVIGATOR && navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 1;\r\nconst IS_IOS = HAS_NAVIGATOR && (/iPad|iPhone|iPod/.test(navigator.userAgent) || IS_IPAD_PRO) && !window.MSStream;\r\nconst IS_SAFARI = HAS_NAVIGATOR && /^((?!chrome|android).)*safari/i.test(navigator.userAgent) && !window.MSStream;\r\nconst HLS_SDK_URL = \"https://cdn.jsdelivr.net/npm/hls.js@VERSION/dist/hls.min.js\";\r\nconst HLS_GLOBAL = \"Hls\";\r\nconst DASH_SDK_URL = \"https://cdnjs.cloudflare.com/ajax/libs/dashjs/VERSION/dash.all.min.js\";\r\nconst DASH_GLOBAL = \"dashjs\";\r\nconst FLV_SDK_URL = \"https://cdn.jsdelivr.net/npm/flv.js@VERSION/dist/flv.min.js\";\r\nconst FLV_GLOBAL = \"flvjs\";\r\nconst MATCH_DROPBOX_URL = /www\\.dropbox\\.com\\/.+/;\r\nconst MATCH_CLOUDFLARE_STREAM = /https:\\/\\/watch\\.cloudflarestream\\.com\\/([a-z0-9]+)/;\r\nconst REPLACE_CLOUDFLARE_STREAM = \"https://videodelivery.net/{id}/manifest/video.m3u8\";\r\nclass FilePlayer extends import_react.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    // Proxy methods to prevent listener leaks\r\n    __publicField(this, \"onReady\", (...args) => this.props.onReady(...args));\r\n    __publicField(this, \"onPlay\", (...args) => this.props.onPlay(...args));\r\n    __publicField(this, \"onBuffer\", (...args) => this.props.onBuffer(...args));\r\n    __publicField(this, \"onBufferEnd\", (...args) => this.props.onBufferEnd(...args));\r\n    __publicField(this, \"onPause\", (...args) => this.props.onPause(...args));\r\n    __publicField(this, \"onEnded\", (...args) => this.props.onEnded(...args));\r\n    __publicField(this, \"onError\", (...args) => this.props.onError(...args));\r\n    __publicField(this, \"onPlayBackRateChange\", (event) => this.props.onPlaybackRateChange(event.target.playbackRate));\r\n    __publicField(this, \"onEnablePIP\", (...args) => this.props.onEnablePIP(...args));\r\n    __publicField(this, \"onDisablePIP\", (e) => {\r\n      const { onDisablePIP, playing } = this.props;\r\n      onDisablePIP(e);\r\n      if (playing) {\r\n        this.play();\r\n      }\r\n    });\r\n    __publicField(this, \"onPresentationModeChange\", (e) => {\r\n      if (this.player && (0, import_utils.supportsWebKitPresentationMode)(this.player)) {\r\n        const { webkitPresentationMode } = this.player;\r\n        if (webkitPresentationMode === \"picture-in-picture\") {\r\n          this.onEnablePIP(e);\r\n        } else if (webkitPresentationMode === \"inline\") {\r\n          this.onDisablePIP(e);\r\n        }\r\n      }\r\n    });\r\n    __publicField(this, \"onSeek\", (e) => {\r\n      this.props.onSeek(e.target.currentTime);\r\n    });\r\n    __publicField(this, \"mute\", () => {\r\n      this.player.muted = true;\r\n    });\r\n    __publicField(this, \"unmute\", () => {\r\n      this.player.muted = false;\r\n    });\r\n    __publicField(this, \"renderSourceElement\", (source, index) => {\r\n      if (typeof source === \"string\") {\r\n        return /* @__PURE__ */ import_react.default.createElement(\"source\", { key: index, src: source });\r\n      }\r\n      return /* @__PURE__ */ import_react.default.createElement(\"source\", { key: index, ...source });\r\n    });\r\n    __publicField(this, \"renderTrack\", (track, index) => {\r\n      return /* @__PURE__ */ import_react.default.createElement(\"track\", { key: index, ...track });\r\n    });\r\n    __publicField(this, \"ref\", (player) => {\r\n      if (this.player) {\r\n        this.prevPlayer = this.player;\r\n      }\r\n      this.player = player;\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onMount && this.props.onMount(this);\r\n    this.addListeners(this.player);\r\n    const src = this.getSource(this.props.url);\r\n    if (src) {\r\n      this.player.src = src;\r\n    }\r\n    if (IS_IOS || this.props.config.forceDisableHls) {\r\n      this.player.load();\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.shouldUseAudio(this.props) !== this.shouldUseAudio(prevProps)) {\r\n      this.removeListeners(this.prevPlayer, prevProps.url);\r\n      this.addListeners(this.player);\r\n    }\r\n    if (this.props.url !== prevProps.url && !(0, import_utils.isMediaStream)(this.props.url) && !(this.props.url instanceof Array)) {\r\n      this.player.srcObject = null;\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.player.removeAttribute(\"src\");\r\n    this.removeListeners(this.player);\r\n    if (this.hls) {\r\n      this.hls.destroy();\r\n    }\r\n  }\r\n  addListeners(player) {\r\n    const { url, playsinline } = this.props;\r\n    player.addEventListener(\"play\", this.onPlay);\r\n    player.addEventListener(\"waiting\", this.onBuffer);\r\n    player.addEventListener(\"playing\", this.onBufferEnd);\r\n    player.addEventListener(\"pause\", this.onPause);\r\n    player.addEventListener(\"seeked\", this.onSeek);\r\n    player.addEventListener(\"ended\", this.onEnded);\r\n    player.addEventListener(\"error\", this.onError);\r\n    player.addEventListener(\"ratechange\", this.onPlayBackRateChange);\r\n    player.addEventListener(\"enterpictureinpicture\", this.onEnablePIP);\r\n    player.addEventListener(\"leavepictureinpicture\", this.onDisablePIP);\r\n    player.addEventListener(\"webkitpresentationmodechanged\", this.onPresentationModeChange);\r\n    if (!this.shouldUseHLS(url)) {\r\n      player.addEventListener(\"canplay\", this.onReady);\r\n    }\r\n    if (playsinline) {\r\n      player.setAttribute(\"playsinline\", \"\");\r\n      player.setAttribute(\"webkit-playsinline\", \"\");\r\n      player.setAttribute(\"x5-playsinline\", \"\");\r\n    }\r\n  }\r\n  removeListeners(player, url) {\r\n    player.removeEventListener(\"canplay\", this.onReady);\r\n    player.removeEventListener(\"play\", this.onPlay);\r\n    player.removeEventListener(\"waiting\", this.onBuffer);\r\n    player.removeEventListener(\"playing\", this.onBufferEnd);\r\n    player.removeEventListener(\"pause\", this.onPause);\r\n    player.removeEventListener(\"seeked\", this.onSeek);\r\n    player.removeEventListener(\"ended\", this.onEnded);\r\n    player.removeEventListener(\"error\", this.onError);\r\n    player.removeEventListener(\"ratechange\", this.onPlayBackRateChange);\r\n    player.removeEventListener(\"enterpictureinpicture\", this.onEnablePIP);\r\n    player.removeEventListener(\"leavepictureinpicture\", this.onDisablePIP);\r\n    player.removeEventListener(\"webkitpresentationmodechanged\", this.onPresentationModeChange);\r\n    if (!this.shouldUseHLS(url)) {\r\n      player.removeEventListener(\"canplay\", this.onReady);\r\n    }\r\n  }\r\n  shouldUseAudio(props) {\r\n    if (props.config.forceVideo) {\r\n      return false;\r\n    }\r\n    if (props.config.attributes.poster) {\r\n      return false;\r\n    }\r\n    return import_patterns.AUDIO_EXTENSIONS.test(props.url) || props.config.forceAudio;\r\n  }\r\n  shouldUseHLS(url) {\r\n    if (IS_SAFARI && this.props.config.forceSafariHLS || this.props.config.forceHLS) {\r\n      return true;\r\n    }\r\n    if (IS_IOS || this.props.config.forceDisableHls) {\r\n      return false;\r\n    }\r\n    return import_patterns.HLS_EXTENSIONS.test(url) || MATCH_CLOUDFLARE_STREAM.test(url);\r\n  }\r\n  shouldUseDASH(url) {\r\n    return import_patterns.DASH_EXTENSIONS.test(url) || this.props.config.forceDASH;\r\n  }\r\n  shouldUseFLV(url) {\r\n    return import_patterns.FLV_EXTENSIONS.test(url) || this.props.config.forceFLV;\r\n  }\r\n  load(url) {\r\n    const { hlsVersion, hlsOptions, dashVersion, flvVersion } = this.props.config;\r\n    if (this.hls) {\r\n      this.hls.destroy();\r\n    }\r\n    if (this.dash) {\r\n      this.dash.reset();\r\n    }\r\n    if (this.shouldUseHLS(url)) {\r\n      (0, import_utils.getSDK)(HLS_SDK_URL.replace(\"VERSION\", hlsVersion), HLS_GLOBAL).then((Hls) => {\r\n        this.hls = new Hls(hlsOptions);\r\n        this.hls.on(Hls.Events.MANIFEST_PARSED, () => {\r\n          this.props.onReady();\r\n        });\r\n        this.hls.on(Hls.Events.ERROR, (e, data) => {\r\n          this.props.onError(e, data, this.hls, Hls);\r\n        });\r\n        if (MATCH_CLOUDFLARE_STREAM.test(url)) {\r\n          const id = url.match(MATCH_CLOUDFLARE_STREAM)[1];\r\n          this.hls.loadSource(REPLACE_CLOUDFLARE_STREAM.replace(\"{id}\", id));\r\n        } else {\r\n          this.hls.loadSource(url);\r\n        }\r\n        this.hls.attachMedia(this.player);\r\n        this.props.onLoaded();\r\n      });\r\n    }\r\n    if (this.shouldUseDASH(url)) {\r\n      (0, import_utils.getSDK)(DASH_SDK_URL.replace(\"VERSION\", dashVersion), DASH_GLOBAL).then((dashjs) => {\r\n        this.dash = dashjs.MediaPlayer().create();\r\n        this.dash.initialize(this.player, url, this.props.playing);\r\n        this.dash.on(\"error\", this.props.onError);\r\n        if (parseInt(dashVersion) < 3) {\r\n          this.dash.getDebug().setLogToBrowserConsole(false);\r\n        } else {\r\n          this.dash.updateSettings({ debug: { logLevel: dashjs.Debug.LOG_LEVEL_NONE } });\r\n        }\r\n        this.props.onLoaded();\r\n      });\r\n    }\r\n    if (this.shouldUseFLV(url)) {\r\n      (0, import_utils.getSDK)(FLV_SDK_URL.replace(\"VERSION\", flvVersion), FLV_GLOBAL).then((flvjs) => {\r\n        this.flv = flvjs.createPlayer({ type: \"flv\", url });\r\n        this.flv.attachMediaElement(this.player);\r\n        this.flv.on(flvjs.Events.ERROR, (e, data) => {\r\n          this.props.onError(e, data, this.flv, flvjs);\r\n        });\r\n        this.flv.load();\r\n        this.props.onLoaded();\r\n      });\r\n    }\r\n    if (url instanceof Array) {\r\n      this.player.load();\r\n    } else if ((0, import_utils.isMediaStream)(url)) {\r\n      try {\r\n        this.player.srcObject = url;\r\n      } catch (e) {\r\n        this.player.src = window.URL.createObjectURL(url);\r\n      }\r\n    }\r\n  }\r\n  play() {\r\n    const promise = this.player.play();\r\n    if (promise) {\r\n      promise.catch(this.props.onError);\r\n    }\r\n  }\r\n  pause() {\r\n    this.player.pause();\r\n  }\r\n  stop() {\r\n    this.player.removeAttribute(\"src\");\r\n    if (this.dash) {\r\n      this.dash.reset();\r\n    }\r\n  }\r\n  seekTo(seconds, keepPlaying = true) {\r\n    this.player.currentTime = seconds;\r\n    if (!keepPlaying) {\r\n      this.pause();\r\n    }\r\n  }\r\n  setVolume(fraction) {\r\n    this.player.volume = fraction;\r\n  }\r\n  enablePIP() {\r\n    if (this.player.requestPictureInPicture && document.pictureInPictureElement !== this.player) {\r\n      this.player.requestPictureInPicture();\r\n    } else if ((0, import_utils.supportsWebKitPresentationMode)(this.player) && this.player.webkitPresentationMode !== \"picture-in-picture\") {\r\n      this.player.webkitSetPresentationMode(\"picture-in-picture\");\r\n    }\r\n  }\r\n  disablePIP() {\r\n    if (document.exitPictureInPicture && document.pictureInPictureElement === this.player) {\r\n      document.exitPictureInPicture();\r\n    } else if ((0, import_utils.supportsWebKitPresentationMode)(this.player) && this.player.webkitPresentationMode !== \"inline\") {\r\n      this.player.webkitSetPresentationMode(\"inline\");\r\n    }\r\n  }\r\n  setPlaybackRate(rate) {\r\n    try {\r\n      this.player.playbackRate = rate;\r\n    } catch (error) {\r\n      this.props.onError(error);\r\n    }\r\n  }\r\n  getDuration() {\r\n    if (!this.player)\r\n      return null;\r\n    const { duration, seekable } = this.player;\r\n    if (duration === Infinity && seekable.length > 0) {\r\n      return seekable.end(seekable.length - 1);\r\n    }\r\n    return duration;\r\n  }\r\n  getCurrentTime() {\r\n    if (!this.player)\r\n      return null;\r\n    return this.player.currentTime;\r\n  }\r\n  getSecondsLoaded() {\r\n    if (!this.player)\r\n      return null;\r\n    const { buffered } = this.player;\r\n    if (buffered.length === 0) {\r\n      return 0;\r\n    }\r\n    const end = buffered.end(buffered.length - 1);\r\n    const duration = this.getDuration();\r\n    if (end > duration) {\r\n      return duration;\r\n    }\r\n    return end;\r\n  }\r\n  getSource(url) {\r\n    const useHLS = this.shouldUseHLS(url);\r\n    const useDASH = this.shouldUseDASH(url);\r\n    const useFLV = this.shouldUseFLV(url);\r\n    if (url instanceof Array || (0, import_utils.isMediaStream)(url) || useHLS || useDASH || useFLV) {\r\n      return void 0;\r\n    }\r\n    if (MATCH_DROPBOX_URL.test(url)) {\r\n      return url.replace(\"www.dropbox.com\", \"dl.dropboxusercontent.com\");\r\n    }\r\n    return url;\r\n  }\r\n  render() {\r\n    const { url, playing, loop, controls, muted, config, width, height } = this.props;\r\n    const useAudio = this.shouldUseAudio(this.props);\r\n    const Element = useAudio ? \"audio\" : \"video\";\r\n    const style = {\r\n      width: width === \"auto\" ? width : \"100%\",\r\n      height: height === \"auto\" ? height : \"100%\"\r\n    };\r\n    return /* @__PURE__ */ import_react.default.createElement(\r\n      Element,\r\n      {\r\n        ref: this.ref,\r\n        src: this.getSource(url),\r\n        style,\r\n        preload: \"auto\",\r\n        autoPlay: playing || void 0,\r\n        controls,\r\n        muted,\r\n        loop,\r\n        ...config.attributes\r\n      },\r\n      url instanceof Array && url.map(this.renderSourceElement),\r\n      config.tracks.map(this.renderTrack)\r\n    );\r\n  }\r\n}\r\n__publicField(FilePlayer, \"displayName\", \"FilePlayer\");\r\n__publicField(FilePlayer, \"canPlay\", import_patterns.canPlay.file);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/players/FilePlayer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/players/Kaltura.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-player/lib/players/Kaltura.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar Kaltura_exports = {};\r\n__export(Kaltura_exports, {\r\n  default: () => Kaltura\r\n});\r\nmodule.exports = __toCommonJS(Kaltura_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\r\nvar import_utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/react-player/lib/utils.js\");\r\nvar import_patterns = __webpack_require__(/*! ../patterns */ \"(ssr)/./node_modules/react-player/lib/patterns.js\");\r\nconst SDK_URL = \"https://cdn.embed.ly/player-0.1.0.min.js\";\r\nconst SDK_GLOBAL = \"playerjs\";\r\nclass Kaltura extends import_react.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\r\n    __publicField(this, \"duration\", null);\r\n    __publicField(this, \"currentTime\", null);\r\n    __publicField(this, \"secondsLoaded\", null);\r\n    __publicField(this, \"mute\", () => {\r\n      this.callPlayer(\"mute\");\r\n    });\r\n    __publicField(this, \"unmute\", () => {\r\n      this.callPlayer(\"unmute\");\r\n    });\r\n    __publicField(this, \"ref\", (iframe) => {\r\n      this.iframe = iframe;\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onMount && this.props.onMount(this);\r\n  }\r\n  load(url) {\r\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then((playerjs) => {\r\n      if (!this.iframe)\r\n        return;\r\n      this.player = new playerjs.Player(this.iframe);\r\n      this.player.on(\"ready\", () => {\r\n        setTimeout(() => {\r\n          this.player.isReady = true;\r\n          this.player.setLoop(this.props.loop);\r\n          if (this.props.muted) {\r\n            this.player.mute();\r\n          }\r\n          this.addListeners(this.player, this.props);\r\n          this.props.onReady();\r\n        }, 500);\r\n      });\r\n    }, this.props.onError);\r\n  }\r\n  addListeners(player, props) {\r\n    player.on(\"play\", props.onPlay);\r\n    player.on(\"pause\", props.onPause);\r\n    player.on(\"ended\", props.onEnded);\r\n    player.on(\"error\", props.onError);\r\n    player.on(\"timeupdate\", ({ duration, seconds }) => {\r\n      this.duration = duration;\r\n      this.currentTime = seconds;\r\n    });\r\n  }\r\n  play() {\r\n    this.callPlayer(\"play\");\r\n  }\r\n  pause() {\r\n    this.callPlayer(\"pause\");\r\n  }\r\n  stop() {\r\n  }\r\n  seekTo(seconds, keepPlaying = true) {\r\n    this.callPlayer(\"setCurrentTime\", seconds);\r\n    if (!keepPlaying) {\r\n      this.pause();\r\n    }\r\n  }\r\n  setVolume(fraction) {\r\n    this.callPlayer(\"setVolume\", fraction);\r\n  }\r\n  setLoop(loop) {\r\n    this.callPlayer(\"setLoop\", loop);\r\n  }\r\n  getDuration() {\r\n    return this.duration;\r\n  }\r\n  getCurrentTime() {\r\n    return this.currentTime;\r\n  }\r\n  getSecondsLoaded() {\r\n    return this.secondsLoaded;\r\n  }\r\n  render() {\r\n    const style = {\r\n      width: \"100%\",\r\n      height: \"100%\"\r\n    };\r\n    return /* @__PURE__ */ import_react.default.createElement(\r\n      \"iframe\",\r\n      {\r\n        ref: this.ref,\r\n        src: this.props.url,\r\n        frameBorder: \"0\",\r\n        scrolling: \"no\",\r\n        style,\r\n        allow: \"encrypted-media; autoplay; fullscreen;\",\r\n        referrerPolicy: \"no-referrer-when-downgrade\"\r\n      }\r\n    );\r\n  }\r\n}\r\n__publicField(Kaltura, \"displayName\", \"Kaltura\");\r\n__publicField(Kaltura, \"canPlay\", import_patterns.canPlay.kaltura);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/players/Kaltura.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/players/Mixcloud.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-player/lib/players/Mixcloud.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar Mixcloud_exports = {};\r\n__export(Mixcloud_exports, {\r\n  default: () => Mixcloud\r\n});\r\nmodule.exports = __toCommonJS(Mixcloud_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\r\nvar import_utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/react-player/lib/utils.js\");\r\nvar import_patterns = __webpack_require__(/*! ../patterns */ \"(ssr)/./node_modules/react-player/lib/patterns.js\");\r\nconst SDK_URL = \"https://widget.mixcloud.com/media/js/widgetApi.js\";\r\nconst SDK_GLOBAL = \"Mixcloud\";\r\nclass Mixcloud extends import_react.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\r\n    __publicField(this, \"duration\", null);\r\n    __publicField(this, \"currentTime\", null);\r\n    __publicField(this, \"secondsLoaded\", null);\r\n    __publicField(this, \"mute\", () => {\r\n    });\r\n    __publicField(this, \"unmute\", () => {\r\n    });\r\n    __publicField(this, \"ref\", (iframe) => {\r\n      this.iframe = iframe;\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onMount && this.props.onMount(this);\r\n  }\r\n  load(url) {\r\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then((Mixcloud2) => {\r\n      this.player = Mixcloud2.PlayerWidget(this.iframe);\r\n      this.player.ready.then(() => {\r\n        this.player.events.play.on(this.props.onPlay);\r\n        this.player.events.pause.on(this.props.onPause);\r\n        this.player.events.ended.on(this.props.onEnded);\r\n        this.player.events.error.on(this.props.error);\r\n        this.player.events.progress.on((seconds, duration) => {\r\n          this.currentTime = seconds;\r\n          this.duration = duration;\r\n        });\r\n        this.props.onReady();\r\n      });\r\n    }, this.props.onError);\r\n  }\r\n  play() {\r\n    this.callPlayer(\"play\");\r\n  }\r\n  pause() {\r\n    this.callPlayer(\"pause\");\r\n  }\r\n  stop() {\r\n  }\r\n  seekTo(seconds, keepPlaying = true) {\r\n    this.callPlayer(\"seek\", seconds);\r\n    if (!keepPlaying) {\r\n      this.pause();\r\n    }\r\n  }\r\n  setVolume(fraction) {\r\n  }\r\n  getDuration() {\r\n    return this.duration;\r\n  }\r\n  getCurrentTime() {\r\n    return this.currentTime;\r\n  }\r\n  getSecondsLoaded() {\r\n    return null;\r\n  }\r\n  render() {\r\n    const { url, config } = this.props;\r\n    const id = url.match(import_patterns.MATCH_URL_MIXCLOUD)[1];\r\n    const style = {\r\n      width: \"100%\",\r\n      height: \"100%\"\r\n    };\r\n    const query = (0, import_utils.queryString)({\r\n      ...config.options,\r\n      feed: `/${id}/`\r\n    });\r\n    return /* @__PURE__ */ import_react.default.createElement(\r\n      \"iframe\",\r\n      {\r\n        key: id,\r\n        ref: this.ref,\r\n        style,\r\n        src: `https://www.mixcloud.com/widget/iframe/?${query}`,\r\n        frameBorder: \"0\",\r\n        allow: \"autoplay\"\r\n      }\r\n    );\r\n  }\r\n}\r\n__publicField(Mixcloud, \"displayName\", \"Mixcloud\");\r\n__publicField(Mixcloud, \"canPlay\", import_patterns.canPlay.mixcloud);\r\n__publicField(Mixcloud, \"loopOnEnded\", true);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtcGxheWVyL2xpYi9wbGF5ZXJzL01peGNsb3VkLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDQTtBQUNBLDhCQUE4QixrQ0FBa0M7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw0RkFBNEY7QUFDekg7QUFDQTtBQUNBO0FBQ0EsbUdBQW1HO0FBQ25HO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLDhCQUE4QjtBQUN2RztBQUNBO0FBQ0Esb0RBQW9ELGtCQUFrQixhQUFhO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMkJBQTJCLG1CQUFPLENBQUMsd0dBQU87QUFDMUMsbUJBQW1CLG1CQUFPLENBQUMsZ0VBQVU7QUFDckMsc0JBQXNCLG1CQUFPLENBQUMsc0VBQWE7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksY0FBYztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixHQUFHO0FBQ25CLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsTUFBTTtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXZlbG8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcGxheWVyL2xpYi9wbGF5ZXJzL01peGNsb3VkLmpzPzY3ZjMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fY3JlYXRlID0gT2JqZWN0LmNyZWF0ZTtcclxudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcclxudmFyIF9fZ2V0T3duUHJvcERlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xyXG52YXIgX19nZXRPd25Qcm9wTmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcclxudmFyIF9fZ2V0UHJvdG9PZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcclxudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XHJcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcclxudmFyIF9fZXhwb3J0ID0gKHRhcmdldCwgYWxsKSA9PiB7XHJcbiAgZm9yICh2YXIgbmFtZSBpbiBhbGwpXHJcbiAgICBfX2RlZlByb3AodGFyZ2V0LCBuYW1lLCB7IGdldDogYWxsW25hbWVdLCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xyXG59O1xyXG52YXIgX19jb3B5UHJvcHMgPSAodG8sIGZyb20sIGV4Y2VwdCwgZGVzYykgPT4ge1xyXG4gIGlmIChmcm9tICYmIHR5cGVvZiBmcm9tID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBmcm9tID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgIGZvciAobGV0IGtleSBvZiBfX2dldE93blByb3BOYW1lcyhmcm9tKSlcclxuICAgICAgaWYgKCFfX2hhc093blByb3AuY2FsbCh0bywga2V5KSAmJiBrZXkgIT09IGV4Y2VwdClcclxuICAgICAgICBfX2RlZlByb3AodG8sIGtleSwgeyBnZXQ6ICgpID0+IGZyb21ba2V5XSwgZW51bWVyYWJsZTogIShkZXNjID0gX19nZXRPd25Qcm9wRGVzYyhmcm9tLCBrZXkpKSB8fCBkZXNjLmVudW1lcmFibGUgfSk7XHJcbiAgfVxyXG4gIHJldHVybiB0bztcclxufTtcclxudmFyIF9fdG9FU00gPSAobW9kLCBpc05vZGVNb2RlLCB0YXJnZXQpID0+ICh0YXJnZXQgPSBtb2QgIT0gbnVsbCA/IF9fY3JlYXRlKF9fZ2V0UHJvdG9PZihtb2QpKSA6IHt9LCBfX2NvcHlQcm9wcyhcclxuICAvLyBJZiB0aGUgaW1wb3J0ZXIgaXMgaW4gbm9kZSBjb21wYXRpYmlsaXR5IG1vZGUgb3IgdGhpcyBpcyBub3QgYW4gRVNNXHJcbiAgLy8gZmlsZSB0aGF0IGhhcyBiZWVuIGNvbnZlcnRlZCB0byBhIENvbW1vbkpTIGZpbGUgdXNpbmcgYSBCYWJlbC1cclxuICAvLyBjb21wYXRpYmxlIHRyYW5zZm9ybSAoaS5lLiBcIl9fZXNNb2R1bGVcIiBoYXMgbm90IGJlZW4gc2V0KSwgdGhlbiBzZXRcclxuICAvLyBcImRlZmF1bHRcIiB0byB0aGUgQ29tbW9uSlMgXCJtb2R1bGUuZXhwb3J0c1wiIGZvciBub2RlIGNvbXBhdGliaWxpdHkuXHJcbiAgaXNOb2RlTW9kZSB8fCAhbW9kIHx8ICFtb2QuX19lc01vZHVsZSA/IF9fZGVmUHJvcCh0YXJnZXQsIFwiZGVmYXVsdFwiLCB7IHZhbHVlOiBtb2QsIGVudW1lcmFibGU6IHRydWUgfSkgOiB0YXJnZXQsXHJcbiAgbW9kXHJcbikpO1xyXG52YXIgX190b0NvbW1vbkpTID0gKG1vZCkgPT4gX19jb3B5UHJvcHMoX19kZWZQcm9wKHt9LCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KSwgbW9kKTtcclxudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiB7XHJcbiAgX19kZWZOb3JtYWxQcm9wKG9iaiwgdHlwZW9mIGtleSAhPT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcclxuICByZXR1cm4gdmFsdWU7XHJcbn07XHJcbnZhciBNaXhjbG91ZF9leHBvcnRzID0ge307XHJcbl9fZXhwb3J0KE1peGNsb3VkX2V4cG9ydHMsIHtcclxuICBkZWZhdWx0OiAoKSA9PiBNaXhjbG91ZFxyXG59KTtcclxubW9kdWxlLmV4cG9ydHMgPSBfX3RvQ29tbW9uSlMoTWl4Y2xvdWRfZXhwb3J0cyk7XHJcbnZhciBpbXBvcnRfcmVhY3QgPSBfX3RvRVNNKHJlcXVpcmUoXCJyZWFjdFwiKSk7XHJcbnZhciBpbXBvcnRfdXRpbHMgPSByZXF1aXJlKFwiLi4vdXRpbHNcIik7XHJcbnZhciBpbXBvcnRfcGF0dGVybnMgPSByZXF1aXJlKFwiLi4vcGF0dGVybnNcIik7XHJcbmNvbnN0IFNES19VUkwgPSBcImh0dHBzOi8vd2lkZ2V0Lm1peGNsb3VkLmNvbS9tZWRpYS9qcy93aWRnZXRBcGkuanNcIjtcclxuY29uc3QgU0RLX0dMT0JBTCA9IFwiTWl4Y2xvdWRcIjtcclxuY2xhc3MgTWl4Y2xvdWQgZXh0ZW5kcyBpbXBvcnRfcmVhY3QuQ29tcG9uZW50IHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XHJcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY2FsbFBsYXllclwiLCBpbXBvcnRfdXRpbHMuY2FsbFBsYXllcik7XHJcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZHVyYXRpb25cIiwgbnVsbCk7XHJcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY3VycmVudFRpbWVcIiwgbnVsbCk7XHJcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic2Vjb25kc0xvYWRlZFwiLCBudWxsKTtcclxuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJtdXRlXCIsICgpID0+IHtcclxuICAgIH0pO1xyXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInVubXV0ZVwiLCAoKSA9PiB7XHJcbiAgICB9KTtcclxuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJyZWZcIiwgKGlmcmFtZSkgPT4ge1xyXG4gICAgICB0aGlzLmlmcmFtZSA9IGlmcmFtZTtcclxuICAgIH0pO1xyXG4gIH1cclxuICBjb21wb25lbnREaWRNb3VudCgpIHtcclxuICAgIHRoaXMucHJvcHMub25Nb3VudCAmJiB0aGlzLnByb3BzLm9uTW91bnQodGhpcyk7XHJcbiAgfVxyXG4gIGxvYWQodXJsKSB7XHJcbiAgICAoMCwgaW1wb3J0X3V0aWxzLmdldFNESykoU0RLX1VSTCwgU0RLX0dMT0JBTCkudGhlbigoTWl4Y2xvdWQyKSA9PiB7XHJcbiAgICAgIHRoaXMucGxheWVyID0gTWl4Y2xvdWQyLlBsYXllcldpZGdldCh0aGlzLmlmcmFtZSk7XHJcbiAgICAgIHRoaXMucGxheWVyLnJlYWR5LnRoZW4oKCkgPT4ge1xyXG4gICAgICAgIHRoaXMucGxheWVyLmV2ZW50cy5wbGF5Lm9uKHRoaXMucHJvcHMub25QbGF5KTtcclxuICAgICAgICB0aGlzLnBsYXllci5ldmVudHMucGF1c2Uub24odGhpcy5wcm9wcy5vblBhdXNlKTtcclxuICAgICAgICB0aGlzLnBsYXllci5ldmVudHMuZW5kZWQub24odGhpcy5wcm9wcy5vbkVuZGVkKTtcclxuICAgICAgICB0aGlzLnBsYXllci5ldmVudHMuZXJyb3Iub24odGhpcy5wcm9wcy5lcnJvcik7XHJcbiAgICAgICAgdGhpcy5wbGF5ZXIuZXZlbnRzLnByb2dyZXNzLm9uKChzZWNvbmRzLCBkdXJhdGlvbikgPT4ge1xyXG4gICAgICAgICAgdGhpcy5jdXJyZW50VGltZSA9IHNlY29uZHM7XHJcbiAgICAgICAgICB0aGlzLmR1cmF0aW9uID0gZHVyYXRpb247XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5wcm9wcy5vblJlYWR5KCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSwgdGhpcy5wcm9wcy5vbkVycm9yKTtcclxuICB9XHJcbiAgcGxheSgpIHtcclxuICAgIHRoaXMuY2FsbFBsYXllcihcInBsYXlcIik7XHJcbiAgfVxyXG4gIHBhdXNlKCkge1xyXG4gICAgdGhpcy5jYWxsUGxheWVyKFwicGF1c2VcIik7XHJcbiAgfVxyXG4gIHN0b3AoKSB7XHJcbiAgfVxyXG4gIHNlZWtUbyhzZWNvbmRzLCBrZWVwUGxheWluZyA9IHRydWUpIHtcclxuICAgIHRoaXMuY2FsbFBsYXllcihcInNlZWtcIiwgc2Vjb25kcyk7XHJcbiAgICBpZiAoIWtlZXBQbGF5aW5nKSB7XHJcbiAgICAgIHRoaXMucGF1c2UoKTtcclxuICAgIH1cclxuICB9XHJcbiAgc2V0Vm9sdW1lKGZyYWN0aW9uKSB7XHJcbiAgfVxyXG4gIGdldER1cmF0aW9uKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZHVyYXRpb247XHJcbiAgfVxyXG4gIGdldEN1cnJlbnRUaW1lKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuY3VycmVudFRpbWU7XHJcbiAgfVxyXG4gIGdldFNlY29uZHNMb2FkZWQoKSB7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgeyB1cmwsIGNvbmZpZyB9ID0gdGhpcy5wcm9wcztcclxuICAgIGNvbnN0IGlkID0gdXJsLm1hdGNoKGltcG9ydF9wYXR0ZXJucy5NQVRDSF9VUkxfTUlYQ0xPVUQpWzFdO1xyXG4gICAgY29uc3Qgc3R5bGUgPSB7XHJcbiAgICAgIHdpZHRoOiBcIjEwMCVcIixcclxuICAgICAgaGVpZ2h0OiBcIjEwMCVcIlxyXG4gICAgfTtcclxuICAgIGNvbnN0IHF1ZXJ5ID0gKDAsIGltcG9ydF91dGlscy5xdWVyeVN0cmluZykoe1xyXG4gICAgICAuLi5jb25maWcub3B0aW9ucyxcclxuICAgICAgZmVlZDogYC8ke2lkfS9gXHJcbiAgICB9KTtcclxuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gaW1wb3J0X3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcclxuICAgICAgXCJpZnJhbWVcIixcclxuICAgICAge1xyXG4gICAgICAgIGtleTogaWQsXHJcbiAgICAgICAgcmVmOiB0aGlzLnJlZixcclxuICAgICAgICBzdHlsZSxcclxuICAgICAgICBzcmM6IGBodHRwczovL3d3dy5taXhjbG91ZC5jb20vd2lkZ2V0L2lmcmFtZS8/JHtxdWVyeX1gLFxyXG4gICAgICAgIGZyYW1lQm9yZGVyOiBcIjBcIixcclxuICAgICAgICBhbGxvdzogXCJhdXRvcGxheVwiXHJcbiAgICAgIH1cclxuICAgICk7XHJcbiAgfVxyXG59XHJcbl9fcHVibGljRmllbGQoTWl4Y2xvdWQsIFwiZGlzcGxheU5hbWVcIiwgXCJNaXhjbG91ZFwiKTtcclxuX19wdWJsaWNGaWVsZChNaXhjbG91ZCwgXCJjYW5QbGF5XCIsIGltcG9ydF9wYXR0ZXJucy5jYW5QbGF5Lm1peGNsb3VkKTtcclxuX19wdWJsaWNGaWVsZChNaXhjbG91ZCwgXCJsb29wT25FbmRlZFwiLCB0cnVlKTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/players/Mixcloud.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/players/Mux.js":
/*!******************************************************!*\
  !*** ./node_modules/react-player/lib/players/Mux.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar Mux_exports = {};\r\n__export(Mux_exports, {\r\n  default: () => Mux\r\n});\r\nmodule.exports = __toCommonJS(Mux_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\r\nvar import_patterns = __webpack_require__(/*! ../patterns */ \"(ssr)/./node_modules/react-player/lib/patterns.js\");\r\nconst SDK_URL = \"https://cdn.jsdelivr.net/npm/@mux/mux-player@VERSION/dist/mux-player.mjs\";\r\nclass Mux extends import_react.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    // Proxy methods to prevent listener leaks\r\n    __publicField(this, \"onReady\", (...args) => this.props.onReady(...args));\r\n    __publicField(this, \"onPlay\", (...args) => this.props.onPlay(...args));\r\n    __publicField(this, \"onBuffer\", (...args) => this.props.onBuffer(...args));\r\n    __publicField(this, \"onBufferEnd\", (...args) => this.props.onBufferEnd(...args));\r\n    __publicField(this, \"onPause\", (...args) => this.props.onPause(...args));\r\n    __publicField(this, \"onEnded\", (...args) => this.props.onEnded(...args));\r\n    __publicField(this, \"onError\", (...args) => this.props.onError(...args));\r\n    __publicField(this, \"onPlayBackRateChange\", (event) => this.props.onPlaybackRateChange(event.target.playbackRate));\r\n    __publicField(this, \"onEnablePIP\", (...args) => this.props.onEnablePIP(...args));\r\n    __publicField(this, \"onSeek\", (e) => {\r\n      this.props.onSeek(e.target.currentTime);\r\n    });\r\n    __publicField(this, \"onDurationChange\", () => {\r\n      const duration = this.getDuration();\r\n      this.props.onDuration(duration);\r\n    });\r\n    __publicField(this, \"mute\", () => {\r\n      this.player.muted = true;\r\n    });\r\n    __publicField(this, \"unmute\", () => {\r\n      this.player.muted = false;\r\n    });\r\n    __publicField(this, \"ref\", (player) => {\r\n      this.player = player;\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onMount && this.props.onMount(this);\r\n    this.addListeners(this.player);\r\n    const playbackId = this.getPlaybackId(this.props.url);\r\n    if (playbackId) {\r\n      this.player.playbackId = playbackId;\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.player.playbackId = null;\r\n    this.removeListeners(this.player);\r\n  }\r\n  addListeners(player) {\r\n    const { playsinline } = this.props;\r\n    player.addEventListener(\"play\", this.onPlay);\r\n    player.addEventListener(\"waiting\", this.onBuffer);\r\n    player.addEventListener(\"playing\", this.onBufferEnd);\r\n    player.addEventListener(\"pause\", this.onPause);\r\n    player.addEventListener(\"seeked\", this.onSeek);\r\n    player.addEventListener(\"ended\", this.onEnded);\r\n    player.addEventListener(\"error\", this.onError);\r\n    player.addEventListener(\"ratechange\", this.onPlayBackRateChange);\r\n    player.addEventListener(\"enterpictureinpicture\", this.onEnablePIP);\r\n    player.addEventListener(\"leavepictureinpicture\", this.onDisablePIP);\r\n    player.addEventListener(\"webkitpresentationmodechanged\", this.onPresentationModeChange);\r\n    player.addEventListener(\"canplay\", this.onReady);\r\n    if (playsinline) {\r\n      player.setAttribute(\"playsinline\", \"\");\r\n    }\r\n  }\r\n  removeListeners(player) {\r\n    player.removeEventListener(\"canplay\", this.onReady);\r\n    player.removeEventListener(\"play\", this.onPlay);\r\n    player.removeEventListener(\"waiting\", this.onBuffer);\r\n    player.removeEventListener(\"playing\", this.onBufferEnd);\r\n    player.removeEventListener(\"pause\", this.onPause);\r\n    player.removeEventListener(\"seeked\", this.onSeek);\r\n    player.removeEventListener(\"ended\", this.onEnded);\r\n    player.removeEventListener(\"error\", this.onError);\r\n    player.removeEventListener(\"ratechange\", this.onPlayBackRateChange);\r\n    player.removeEventListener(\"enterpictureinpicture\", this.onEnablePIP);\r\n    player.removeEventListener(\"leavepictureinpicture\", this.onDisablePIP);\r\n    player.removeEventListener(\"canplay\", this.onReady);\r\n  }\r\n  async load(url) {\r\n    var _a;\r\n    const { onError, config } = this.props;\r\n    if (!((_a = globalThis.customElements) == null ? void 0 : _a.get(\"mux-player\"))) {\r\n      try {\r\n        const sdkUrl = SDK_URL.replace(\"VERSION\", config.version);\r\n        await import(\r\n          /* webpackIgnore: true */\r\n          `${sdkUrl}`\r\n        );\r\n        this.props.onLoaded();\r\n      } catch (error) {\r\n        onError(error);\r\n      }\r\n    }\r\n    const [, id] = url.match(import_patterns.MATCH_URL_MUX);\r\n    this.player.playbackId = id;\r\n  }\r\n  play() {\r\n    const promise = this.player.play();\r\n    if (promise) {\r\n      promise.catch(this.props.onError);\r\n    }\r\n  }\r\n  pause() {\r\n    this.player.pause();\r\n  }\r\n  stop() {\r\n    this.player.playbackId = null;\r\n  }\r\n  seekTo(seconds, keepPlaying = true) {\r\n    this.player.currentTime = seconds;\r\n    if (!keepPlaying) {\r\n      this.pause();\r\n    }\r\n  }\r\n  setVolume(fraction) {\r\n    this.player.volume = fraction;\r\n  }\r\n  enablePIP() {\r\n    if (this.player.requestPictureInPicture && document.pictureInPictureElement !== this.player) {\r\n      this.player.requestPictureInPicture();\r\n    }\r\n  }\r\n  disablePIP() {\r\n    if (document.exitPictureInPicture && document.pictureInPictureElement === this.player) {\r\n      document.exitPictureInPicture();\r\n    }\r\n  }\r\n  setPlaybackRate(rate) {\r\n    try {\r\n      this.player.playbackRate = rate;\r\n    } catch (error) {\r\n      this.props.onError(error);\r\n    }\r\n  }\r\n  getDuration() {\r\n    if (!this.player)\r\n      return null;\r\n    const { duration, seekable } = this.player;\r\n    if (duration === Infinity && seekable.length > 0) {\r\n      return seekable.end(seekable.length - 1);\r\n    }\r\n    return duration;\r\n  }\r\n  getCurrentTime() {\r\n    if (!this.player)\r\n      return null;\r\n    return this.player.currentTime;\r\n  }\r\n  getSecondsLoaded() {\r\n    if (!this.player)\r\n      return null;\r\n    const { buffered } = this.player;\r\n    if (buffered.length === 0) {\r\n      return 0;\r\n    }\r\n    const end = buffered.end(buffered.length - 1);\r\n    const duration = this.getDuration();\r\n    if (end > duration) {\r\n      return duration;\r\n    }\r\n    return end;\r\n  }\r\n  getPlaybackId(url) {\r\n    const [, id] = url.match(import_patterns.MATCH_URL_MUX);\r\n    return id;\r\n  }\r\n  render() {\r\n    const { url, playing, loop, controls, muted, config, width, height } = this.props;\r\n    const style = {\r\n      width: width === \"auto\" ? width : \"100%\",\r\n      height: height === \"auto\" ? height : \"100%\"\r\n    };\r\n    if (controls === false) {\r\n      style[\"--controls\"] = \"none\";\r\n    }\r\n    return /* @__PURE__ */ import_react.default.createElement(\r\n      \"mux-player\",\r\n      {\r\n        ref: this.ref,\r\n        \"playback-id\": this.getPlaybackId(url),\r\n        style,\r\n        preload: \"auto\",\r\n        autoPlay: playing || void 0,\r\n        muted: muted ? \"\" : void 0,\r\n        loop: loop ? \"\" : void 0,\r\n        ...config.attributes\r\n      }\r\n    );\r\n  }\r\n}\r\n__publicField(Mux, \"displayName\", \"Mux\");\r\n__publicField(Mux, \"canPlay\", import_patterns.canPlay.mux);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/players/Mux.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/players/SoundCloud.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-player/lib/players/SoundCloud.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar SoundCloud_exports = {};\r\n__export(SoundCloud_exports, {\r\n  default: () => SoundCloud\r\n});\r\nmodule.exports = __toCommonJS(SoundCloud_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\r\nvar import_utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/react-player/lib/utils.js\");\r\nvar import_patterns = __webpack_require__(/*! ../patterns */ \"(ssr)/./node_modules/react-player/lib/patterns.js\");\r\nconst SDK_URL = \"https://w.soundcloud.com/player/api.js\";\r\nconst SDK_GLOBAL = \"SC\";\r\nclass SoundCloud extends import_react.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\r\n    __publicField(this, \"duration\", null);\r\n    __publicField(this, \"currentTime\", null);\r\n    __publicField(this, \"fractionLoaded\", null);\r\n    __publicField(this, \"mute\", () => {\r\n      this.setVolume(0);\r\n    });\r\n    __publicField(this, \"unmute\", () => {\r\n      if (this.props.volume !== null) {\r\n        this.setVolume(this.props.volume);\r\n      }\r\n    });\r\n    __publicField(this, \"ref\", (iframe) => {\r\n      this.iframe = iframe;\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onMount && this.props.onMount(this);\r\n  }\r\n  load(url, isReady) {\r\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then((SC) => {\r\n      if (!this.iframe)\r\n        return;\r\n      const { PLAY, PLAY_PROGRESS, PAUSE, FINISH, ERROR } = SC.Widget.Events;\r\n      if (!isReady) {\r\n        this.player = SC.Widget(this.iframe);\r\n        this.player.bind(PLAY, this.props.onPlay);\r\n        this.player.bind(PAUSE, () => {\r\n          const remaining = this.duration - this.currentTime;\r\n          if (remaining < 0.05) {\r\n            return;\r\n          }\r\n          this.props.onPause();\r\n        });\r\n        this.player.bind(PLAY_PROGRESS, (e) => {\r\n          this.currentTime = e.currentPosition / 1e3;\r\n          this.fractionLoaded = e.loadedProgress;\r\n        });\r\n        this.player.bind(FINISH, () => this.props.onEnded());\r\n        this.player.bind(ERROR, (e) => this.props.onError(e));\r\n      }\r\n      this.player.load(url, {\r\n        ...this.props.config.options,\r\n        callback: () => {\r\n          this.player.getDuration((duration) => {\r\n            this.duration = duration / 1e3;\r\n            this.props.onReady();\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n  play() {\r\n    this.callPlayer(\"play\");\r\n  }\r\n  pause() {\r\n    this.callPlayer(\"pause\");\r\n  }\r\n  stop() {\r\n  }\r\n  seekTo(seconds, keepPlaying = true) {\r\n    this.callPlayer(\"seekTo\", seconds * 1e3);\r\n    if (!keepPlaying) {\r\n      this.pause();\r\n    }\r\n  }\r\n  setVolume(fraction) {\r\n    this.callPlayer(\"setVolume\", fraction * 100);\r\n  }\r\n  getDuration() {\r\n    return this.duration;\r\n  }\r\n  getCurrentTime() {\r\n    return this.currentTime;\r\n  }\r\n  getSecondsLoaded() {\r\n    return this.fractionLoaded * this.duration;\r\n  }\r\n  render() {\r\n    const { display } = this.props;\r\n    const style = {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display\r\n    };\r\n    return /* @__PURE__ */ import_react.default.createElement(\r\n      \"iframe\",\r\n      {\r\n        ref: this.ref,\r\n        src: `https://w.soundcloud.com/player/?url=${encodeURIComponent(this.props.url)}`,\r\n        style,\r\n        frameBorder: 0,\r\n        allow: \"autoplay\"\r\n      }\r\n    );\r\n  }\r\n}\r\n__publicField(SoundCloud, \"displayName\", \"SoundCloud\");\r\n__publicField(SoundCloud, \"canPlay\", import_patterns.canPlay.soundcloud);\r\n__publicField(SoundCloud, \"loopOnEnded\", true);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/players/SoundCloud.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/players/Streamable.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-player/lib/players/Streamable.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar Streamable_exports = {};\r\n__export(Streamable_exports, {\r\n  default: () => Streamable\r\n});\r\nmodule.exports = __toCommonJS(Streamable_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\r\nvar import_utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/react-player/lib/utils.js\");\r\nvar import_patterns = __webpack_require__(/*! ../patterns */ \"(ssr)/./node_modules/react-player/lib/patterns.js\");\r\nconst SDK_URL = \"https://cdn.embed.ly/player-0.1.0.min.js\";\r\nconst SDK_GLOBAL = \"playerjs\";\r\nclass Streamable extends import_react.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\r\n    __publicField(this, \"duration\", null);\r\n    __publicField(this, \"currentTime\", null);\r\n    __publicField(this, \"secondsLoaded\", null);\r\n    __publicField(this, \"mute\", () => {\r\n      this.callPlayer(\"mute\");\r\n    });\r\n    __publicField(this, \"unmute\", () => {\r\n      this.callPlayer(\"unmute\");\r\n    });\r\n    __publicField(this, \"ref\", (iframe) => {\r\n      this.iframe = iframe;\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onMount && this.props.onMount(this);\r\n  }\r\n  load(url) {\r\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then((playerjs) => {\r\n      if (!this.iframe)\r\n        return;\r\n      this.player = new playerjs.Player(this.iframe);\r\n      this.player.setLoop(this.props.loop);\r\n      this.player.on(\"ready\", this.props.onReady);\r\n      this.player.on(\"play\", this.props.onPlay);\r\n      this.player.on(\"pause\", this.props.onPause);\r\n      this.player.on(\"seeked\", this.props.onSeek);\r\n      this.player.on(\"ended\", this.props.onEnded);\r\n      this.player.on(\"error\", this.props.onError);\r\n      this.player.on(\"timeupdate\", ({ duration, seconds }) => {\r\n        this.duration = duration;\r\n        this.currentTime = seconds;\r\n      });\r\n      this.player.on(\"buffered\", ({ percent }) => {\r\n        if (this.duration) {\r\n          this.secondsLoaded = this.duration * percent;\r\n        }\r\n      });\r\n      if (this.props.muted) {\r\n        this.player.mute();\r\n      }\r\n    }, this.props.onError);\r\n  }\r\n  play() {\r\n    this.callPlayer(\"play\");\r\n  }\r\n  pause() {\r\n    this.callPlayer(\"pause\");\r\n  }\r\n  stop() {\r\n  }\r\n  seekTo(seconds, keepPlaying = true) {\r\n    this.callPlayer(\"setCurrentTime\", seconds);\r\n    if (!keepPlaying) {\r\n      this.pause();\r\n    }\r\n  }\r\n  setVolume(fraction) {\r\n    this.callPlayer(\"setVolume\", fraction * 100);\r\n  }\r\n  setLoop(loop) {\r\n    this.callPlayer(\"setLoop\", loop);\r\n  }\r\n  getDuration() {\r\n    return this.duration;\r\n  }\r\n  getCurrentTime() {\r\n    return this.currentTime;\r\n  }\r\n  getSecondsLoaded() {\r\n    return this.secondsLoaded;\r\n  }\r\n  render() {\r\n    const id = this.props.url.match(import_patterns.MATCH_URL_STREAMABLE)[1];\r\n    const style = {\r\n      width: \"100%\",\r\n      height: \"100%\"\r\n    };\r\n    return /* @__PURE__ */ import_react.default.createElement(\r\n      \"iframe\",\r\n      {\r\n        ref: this.ref,\r\n        src: `https://streamable.com/o/${id}`,\r\n        frameBorder: \"0\",\r\n        scrolling: \"no\",\r\n        style,\r\n        allow: \"encrypted-media; autoplay; fullscreen;\"\r\n      }\r\n    );\r\n  }\r\n}\r\n__publicField(Streamable, \"displayName\", \"Streamable\");\r\n__publicField(Streamable, \"canPlay\", import_patterns.canPlay.streamable);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtcGxheWVyL2xpYi9wbGF5ZXJzL1N0cmVhbWFibGUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNBO0FBQ0EsOEJBQThCLGtDQUFrQztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDRGQUE0RjtBQUN6SDtBQUNBO0FBQ0E7QUFDQSxtR0FBbUc7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsOEJBQThCO0FBQ3ZHO0FBQ0E7QUFDQSxvREFBb0Qsa0JBQWtCLGFBQWE7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwyQkFBMkIsbUJBQU8sQ0FBQyx3R0FBTztBQUMxQyxtQkFBbUIsbUJBQU8sQ0FBQyxnRUFBVTtBQUNyQyxzQkFBc0IsbUJBQU8sQ0FBQyxzRUFBYTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxtQkFBbUI7QUFDekQ7QUFDQTtBQUNBLE9BQU87QUFDUCxvQ0FBb0MsU0FBUztBQUM3QztBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLEdBQUc7QUFDNUM7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLFVBQVUsV0FBVztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXZlbG8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcGxheWVyL2xpYi9wbGF5ZXJzL1N0cmVhbWFibGUuanM/YjFhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19jcmVhdGUgPSBPYmplY3QuY3JlYXRlO1xyXG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xyXG52YXIgX19nZXRPd25Qcm9wRGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XHJcbnZhciBfX2dldE93blByb3BOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xyXG52YXIgX19nZXRQcm90b09mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xyXG52YXIgX19oYXNPd25Qcm9wID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcclxudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xyXG52YXIgX19leHBvcnQgPSAodGFyZ2V0LCBhbGwpID0+IHtcclxuICBmb3IgKHZhciBuYW1lIGluIGFsbClcclxuICAgIF9fZGVmUHJvcCh0YXJnZXQsIG5hbWUsIHsgZ2V0OiBhbGxbbmFtZV0sIGVudW1lcmFibGU6IHRydWUgfSk7XHJcbn07XHJcbnZhciBfX2NvcHlQcm9wcyA9ICh0bywgZnJvbSwgZXhjZXB0LCBkZXNjKSA9PiB7XHJcbiAgaWYgKGZyb20gJiYgdHlwZW9mIGZyb20gPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGZyb20gPT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgZm9yIChsZXQga2V5IG9mIF9fZ2V0T3duUHJvcE5hbWVzKGZyb20pKVxyXG4gICAgICBpZiAoIV9faGFzT3duUHJvcC5jYWxsKHRvLCBrZXkpICYmIGtleSAhPT0gZXhjZXB0KVxyXG4gICAgICAgIF9fZGVmUHJvcCh0bywga2V5LCB7IGdldDogKCkgPT4gZnJvbVtrZXldLCBlbnVtZXJhYmxlOiAhKGRlc2MgPSBfX2dldE93blByb3BEZXNjKGZyb20sIGtleSkpIHx8IGRlc2MuZW51bWVyYWJsZSB9KTtcclxuICB9XHJcbiAgcmV0dXJuIHRvO1xyXG59O1xyXG52YXIgX190b0VTTSA9IChtb2QsIGlzTm9kZU1vZGUsIHRhcmdldCkgPT4gKHRhcmdldCA9IG1vZCAhPSBudWxsID8gX19jcmVhdGUoX19nZXRQcm90b09mKG1vZCkpIDoge30sIF9fY29weVByb3BzKFxyXG4gIC8vIElmIHRoZSBpbXBvcnRlciBpcyBpbiBub2RlIGNvbXBhdGliaWxpdHkgbW9kZSBvciB0aGlzIGlzIG5vdCBhbiBFU01cclxuICAvLyBmaWxlIHRoYXQgaGFzIGJlZW4gY29udmVydGVkIHRvIGEgQ29tbW9uSlMgZmlsZSB1c2luZyBhIEJhYmVsLVxyXG4gIC8vIGNvbXBhdGlibGUgdHJhbnNmb3JtIChpLmUuIFwiX19lc01vZHVsZVwiIGhhcyBub3QgYmVlbiBzZXQpLCB0aGVuIHNldFxyXG4gIC8vIFwiZGVmYXVsdFwiIHRvIHRoZSBDb21tb25KUyBcIm1vZHVsZS5leHBvcnRzXCIgZm9yIG5vZGUgY29tcGF0aWJpbGl0eS5cclxuICBpc05vZGVNb2RlIHx8ICFtb2QgfHwgIW1vZC5fX2VzTW9kdWxlID8gX19kZWZQcm9wKHRhcmdldCwgXCJkZWZhdWx0XCIsIHsgdmFsdWU6IG1vZCwgZW51bWVyYWJsZTogdHJ1ZSB9KSA6IHRhcmdldCxcclxuICBtb2RcclxuKSk7XHJcbnZhciBfX3RvQ29tbW9uSlMgPSAobW9kKSA9PiBfX2NvcHlQcm9wcyhfX2RlZlByb3Aoe30sIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pLCBtb2QpO1xyXG52YXIgX19wdWJsaWNGaWVsZCA9IChvYmosIGtleSwgdmFsdWUpID0+IHtcclxuICBfX2RlZk5vcm1hbFByb3Aob2JqLCB0eXBlb2Yga2V5ICE9PSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xyXG4gIHJldHVybiB2YWx1ZTtcclxufTtcclxudmFyIFN0cmVhbWFibGVfZXhwb3J0cyA9IHt9O1xyXG5fX2V4cG9ydChTdHJlYW1hYmxlX2V4cG9ydHMsIHtcclxuICBkZWZhdWx0OiAoKSA9PiBTdHJlYW1hYmxlXHJcbn0pO1xyXG5tb2R1bGUuZXhwb3J0cyA9IF9fdG9Db21tb25KUyhTdHJlYW1hYmxlX2V4cG9ydHMpO1xyXG52YXIgaW1wb3J0X3JlYWN0ID0gX190b0VTTShyZXF1aXJlKFwicmVhY3RcIikpO1xyXG52YXIgaW1wb3J0X3V0aWxzID0gcmVxdWlyZShcIi4uL3V0aWxzXCIpO1xyXG52YXIgaW1wb3J0X3BhdHRlcm5zID0gcmVxdWlyZShcIi4uL3BhdHRlcm5zXCIpO1xyXG5jb25zdCBTREtfVVJMID0gXCJodHRwczovL2Nkbi5lbWJlZC5seS9wbGF5ZXItMC4xLjAubWluLmpzXCI7XHJcbmNvbnN0IFNES19HTE9CQUwgPSBcInBsYXllcmpzXCI7XHJcbmNsYXNzIFN0cmVhbWFibGUgZXh0ZW5kcyBpbXBvcnRfcmVhY3QuQ29tcG9uZW50IHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XHJcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY2FsbFBsYXllclwiLCBpbXBvcnRfdXRpbHMuY2FsbFBsYXllcik7XHJcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZHVyYXRpb25cIiwgbnVsbCk7XHJcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY3VycmVudFRpbWVcIiwgbnVsbCk7XHJcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic2Vjb25kc0xvYWRlZFwiLCBudWxsKTtcclxuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJtdXRlXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5jYWxsUGxheWVyKFwibXV0ZVwiKTtcclxuICAgIH0pO1xyXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInVubXV0ZVwiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuY2FsbFBsYXllcihcInVubXV0ZVwiKTtcclxuICAgIH0pO1xyXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInJlZlwiLCAoaWZyYW1lKSA9PiB7XHJcbiAgICAgIHRoaXMuaWZyYW1lID0gaWZyYW1lO1xyXG4gICAgfSk7XHJcbiAgfVxyXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xyXG4gICAgdGhpcy5wcm9wcy5vbk1vdW50ICYmIHRoaXMucHJvcHMub25Nb3VudCh0aGlzKTtcclxuICB9XHJcbiAgbG9hZCh1cmwpIHtcclxuICAgICgwLCBpbXBvcnRfdXRpbHMuZ2V0U0RLKShTREtfVVJMLCBTREtfR0xPQkFMKS50aGVuKChwbGF5ZXJqcykgPT4ge1xyXG4gICAgICBpZiAoIXRoaXMuaWZyYW1lKVxyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgdGhpcy5wbGF5ZXIgPSBuZXcgcGxheWVyanMuUGxheWVyKHRoaXMuaWZyYW1lKTtcclxuICAgICAgdGhpcy5wbGF5ZXIuc2V0TG9vcCh0aGlzLnByb3BzLmxvb3ApO1xyXG4gICAgICB0aGlzLnBsYXllci5vbihcInJlYWR5XCIsIHRoaXMucHJvcHMub25SZWFkeSk7XHJcbiAgICAgIHRoaXMucGxheWVyLm9uKFwicGxheVwiLCB0aGlzLnByb3BzLm9uUGxheSk7XHJcbiAgICAgIHRoaXMucGxheWVyLm9uKFwicGF1c2VcIiwgdGhpcy5wcm9wcy5vblBhdXNlKTtcclxuICAgICAgdGhpcy5wbGF5ZXIub24oXCJzZWVrZWRcIiwgdGhpcy5wcm9wcy5vblNlZWspO1xyXG4gICAgICB0aGlzLnBsYXllci5vbihcImVuZGVkXCIsIHRoaXMucHJvcHMub25FbmRlZCk7XHJcbiAgICAgIHRoaXMucGxheWVyLm9uKFwiZXJyb3JcIiwgdGhpcy5wcm9wcy5vbkVycm9yKTtcclxuICAgICAgdGhpcy5wbGF5ZXIub24oXCJ0aW1ldXBkYXRlXCIsICh7IGR1cmF0aW9uLCBzZWNvbmRzIH0pID0+IHtcclxuICAgICAgICB0aGlzLmR1cmF0aW9uID0gZHVyYXRpb247XHJcbiAgICAgICAgdGhpcy5jdXJyZW50VGltZSA9IHNlY29uZHM7XHJcbiAgICAgIH0pO1xyXG4gICAgICB0aGlzLnBsYXllci5vbihcImJ1ZmZlcmVkXCIsICh7IHBlcmNlbnQgfSkgPT4ge1xyXG4gICAgICAgIGlmICh0aGlzLmR1cmF0aW9uKSB7XHJcbiAgICAgICAgICB0aGlzLnNlY29uZHNMb2FkZWQgPSB0aGlzLmR1cmF0aW9uICogcGVyY2VudDtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgICBpZiAodGhpcy5wcm9wcy5tdXRlZCkge1xyXG4gICAgICAgIHRoaXMucGxheWVyLm11dGUoKTtcclxuICAgICAgfVxyXG4gICAgfSwgdGhpcy5wcm9wcy5vbkVycm9yKTtcclxuICB9XHJcbiAgcGxheSgpIHtcclxuICAgIHRoaXMuY2FsbFBsYXllcihcInBsYXlcIik7XHJcbiAgfVxyXG4gIHBhdXNlKCkge1xyXG4gICAgdGhpcy5jYWxsUGxheWVyKFwicGF1c2VcIik7XHJcbiAgfVxyXG4gIHN0b3AoKSB7XHJcbiAgfVxyXG4gIHNlZWtUbyhzZWNvbmRzLCBrZWVwUGxheWluZyA9IHRydWUpIHtcclxuICAgIHRoaXMuY2FsbFBsYXllcihcInNldEN1cnJlbnRUaW1lXCIsIHNlY29uZHMpO1xyXG4gICAgaWYgKCFrZWVwUGxheWluZykge1xyXG4gICAgICB0aGlzLnBhdXNlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHNldFZvbHVtZShmcmFjdGlvbikge1xyXG4gICAgdGhpcy5jYWxsUGxheWVyKFwic2V0Vm9sdW1lXCIsIGZyYWN0aW9uICogMTAwKTtcclxuICB9XHJcbiAgc2V0TG9vcChsb29wKSB7XHJcbiAgICB0aGlzLmNhbGxQbGF5ZXIoXCJzZXRMb29wXCIsIGxvb3ApO1xyXG4gIH1cclxuICBnZXREdXJhdGlvbigpIHtcclxuICAgIHJldHVybiB0aGlzLmR1cmF0aW9uO1xyXG4gIH1cclxuICBnZXRDdXJyZW50VGltZSgpIHtcclxuICAgIHJldHVybiB0aGlzLmN1cnJlbnRUaW1lO1xyXG4gIH1cclxuICBnZXRTZWNvbmRzTG9hZGVkKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuc2Vjb25kc0xvYWRlZDtcclxuICB9XHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgaWQgPSB0aGlzLnByb3BzLnVybC5tYXRjaChpbXBvcnRfcGF0dGVybnMuTUFUQ0hfVVJMX1NUUkVBTUFCTEUpWzFdO1xyXG4gICAgY29uc3Qgc3R5bGUgPSB7XHJcbiAgICAgIHdpZHRoOiBcIjEwMCVcIixcclxuICAgICAgaGVpZ2h0OiBcIjEwMCVcIlxyXG4gICAgfTtcclxuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gaW1wb3J0X3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcclxuICAgICAgXCJpZnJhbWVcIixcclxuICAgICAge1xyXG4gICAgICAgIHJlZjogdGhpcy5yZWYsXHJcbiAgICAgICAgc3JjOiBgaHR0cHM6Ly9zdHJlYW1hYmxlLmNvbS9vLyR7aWR9YCxcclxuICAgICAgICBmcmFtZUJvcmRlcjogXCIwXCIsXHJcbiAgICAgICAgc2Nyb2xsaW5nOiBcIm5vXCIsXHJcbiAgICAgICAgc3R5bGUsXHJcbiAgICAgICAgYWxsb3c6IFwiZW5jcnlwdGVkLW1lZGlhOyBhdXRvcGxheTsgZnVsbHNjcmVlbjtcIlxyXG4gICAgICB9XHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5fX3B1YmxpY0ZpZWxkKFN0cmVhbWFibGUsIFwiZGlzcGxheU5hbWVcIiwgXCJTdHJlYW1hYmxlXCIpO1xyXG5fX3B1YmxpY0ZpZWxkKFN0cmVhbWFibGUsIFwiY2FuUGxheVwiLCBpbXBvcnRfcGF0dGVybnMuY2FuUGxheS5zdHJlYW1hYmxlKTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/players/Streamable.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/players/Twitch.js":
/*!*********************************************************!*\
  !*** ./node_modules/react-player/lib/players/Twitch.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar Twitch_exports = {};\r\n__export(Twitch_exports, {\r\n  default: () => Twitch\r\n});\r\nmodule.exports = __toCommonJS(Twitch_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\r\nvar import_utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/react-player/lib/utils.js\");\r\nvar import_patterns = __webpack_require__(/*! ../patterns */ \"(ssr)/./node_modules/react-player/lib/patterns.js\");\r\nconst SDK_URL = \"https://player.twitch.tv/js/embed/v1.js\";\r\nconst SDK_GLOBAL = \"Twitch\";\r\nconst PLAYER_ID_PREFIX = \"twitch-player-\";\r\nclass Twitch extends import_react.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\r\n    __publicField(this, \"playerID\", this.props.config.playerId || `${PLAYER_ID_PREFIX}${(0, import_utils.randomString)()}`);\r\n    __publicField(this, \"mute\", () => {\r\n      this.callPlayer(\"setMuted\", true);\r\n    });\r\n    __publicField(this, \"unmute\", () => {\r\n      this.callPlayer(\"setMuted\", false);\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onMount && this.props.onMount(this);\r\n  }\r\n  load(url, isReady) {\r\n    const { playsinline, onError, config, controls } = this.props;\r\n    const isChannel = import_patterns.MATCH_URL_TWITCH_CHANNEL.test(url);\r\n    const id = isChannel ? url.match(import_patterns.MATCH_URL_TWITCH_CHANNEL)[1] : url.match(import_patterns.MATCH_URL_TWITCH_VIDEO)[1];\r\n    if (isReady) {\r\n      if (isChannel) {\r\n        this.player.setChannel(id);\r\n      } else {\r\n        this.player.setVideo(\"v\" + id);\r\n      }\r\n      return;\r\n    }\r\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then((Twitch2) => {\r\n      this.player = new Twitch2.Player(this.playerID, {\r\n        video: isChannel ? \"\" : id,\r\n        channel: isChannel ? id : \"\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        playsinline,\r\n        autoplay: this.props.playing,\r\n        muted: this.props.muted,\r\n        // https://github.com/CookPete/react-player/issues/733#issuecomment-549085859\r\n        controls: isChannel ? true : controls,\r\n        time: (0, import_utils.parseStartTime)(url),\r\n        ...config.options\r\n      });\r\n      const { READY, PLAYING, PAUSE, ENDED, ONLINE, OFFLINE, SEEK } = Twitch2.Player;\r\n      this.player.addEventListener(READY, this.props.onReady);\r\n      this.player.addEventListener(PLAYING, this.props.onPlay);\r\n      this.player.addEventListener(PAUSE, this.props.onPause);\r\n      this.player.addEventListener(ENDED, this.props.onEnded);\r\n      this.player.addEventListener(SEEK, this.props.onSeek);\r\n      this.player.addEventListener(ONLINE, this.props.onLoaded);\r\n      this.player.addEventListener(OFFLINE, this.props.onLoaded);\r\n    }, onError);\r\n  }\r\n  play() {\r\n    this.callPlayer(\"play\");\r\n  }\r\n  pause() {\r\n    this.callPlayer(\"pause\");\r\n  }\r\n  stop() {\r\n    this.callPlayer(\"pause\");\r\n  }\r\n  seekTo(seconds, keepPlaying = true) {\r\n    this.callPlayer(\"seek\", seconds);\r\n    if (!keepPlaying) {\r\n      this.pause();\r\n    }\r\n  }\r\n  setVolume(fraction) {\r\n    this.callPlayer(\"setVolume\", fraction);\r\n  }\r\n  getDuration() {\r\n    return this.callPlayer(\"getDuration\");\r\n  }\r\n  getCurrentTime() {\r\n    return this.callPlayer(\"getCurrentTime\");\r\n  }\r\n  getSecondsLoaded() {\r\n    return null;\r\n  }\r\n  render() {\r\n    const style = {\r\n      width: \"100%\",\r\n      height: \"100%\"\r\n    };\r\n    return /* @__PURE__ */ import_react.default.createElement(\"div\", { style, id: this.playerID });\r\n  }\r\n}\r\n__publicField(Twitch, \"displayName\", \"Twitch\");\r\n__publicField(Twitch, \"canPlay\", import_patterns.canPlay.twitch);\r\n__publicField(Twitch, \"loopOnEnded\", true);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/players/Twitch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/players/Vidyard.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-player/lib/players/Vidyard.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar Vidyard_exports = {};\r\n__export(Vidyard_exports, {\r\n  default: () => Vidyard\r\n});\r\nmodule.exports = __toCommonJS(Vidyard_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\r\nvar import_utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/react-player/lib/utils.js\");\r\nvar import_patterns = __webpack_require__(/*! ../patterns */ \"(ssr)/./node_modules/react-player/lib/patterns.js\");\r\nconst SDK_URL = \"https://play.vidyard.com/embed/v4.js\";\r\nconst SDK_GLOBAL = \"VidyardV4\";\r\nconst SDK_GLOBAL_READY = \"onVidyardAPI\";\r\nclass Vidyard extends import_react.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\r\n    __publicField(this, \"mute\", () => {\r\n      this.setVolume(0);\r\n    });\r\n    __publicField(this, \"unmute\", () => {\r\n      if (this.props.volume !== null) {\r\n        this.setVolume(this.props.volume);\r\n      }\r\n    });\r\n    __publicField(this, \"ref\", (container) => {\r\n      this.container = container;\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onMount && this.props.onMount(this);\r\n  }\r\n  load(url) {\r\n    const { playing, config, onError, onDuration } = this.props;\r\n    const id = url && url.match(import_patterns.MATCH_URL_VIDYARD)[1];\r\n    if (this.player) {\r\n      this.stop();\r\n    }\r\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then((Vidyard2) => {\r\n      if (!this.container)\r\n        return;\r\n      Vidyard2.api.addReadyListener((data, player) => {\r\n        if (this.player) {\r\n          return;\r\n        }\r\n        this.player = player;\r\n        this.player.on(\"ready\", this.props.onReady);\r\n        this.player.on(\"play\", this.props.onPlay);\r\n        this.player.on(\"pause\", this.props.onPause);\r\n        this.player.on(\"seek\", this.props.onSeek);\r\n        this.player.on(\"playerComplete\", this.props.onEnded);\r\n      }, id);\r\n      Vidyard2.api.renderPlayer({\r\n        uuid: id,\r\n        container: this.container,\r\n        autoplay: playing ? 1 : 0,\r\n        ...config.options\r\n      });\r\n      Vidyard2.api.getPlayerMetadata(id).then((meta) => {\r\n        this.duration = meta.length_in_seconds;\r\n        onDuration(meta.length_in_seconds);\r\n      });\r\n    }, onError);\r\n  }\r\n  play() {\r\n    this.callPlayer(\"play\");\r\n  }\r\n  pause() {\r\n    this.callPlayer(\"pause\");\r\n  }\r\n  stop() {\r\n    window.VidyardV4.api.destroyPlayer(this.player);\r\n  }\r\n  seekTo(amount, keepPlaying = true) {\r\n    this.callPlayer(\"seek\", amount);\r\n    if (!keepPlaying) {\r\n      this.pause();\r\n    }\r\n  }\r\n  setVolume(fraction) {\r\n    this.callPlayer(\"setVolume\", fraction);\r\n  }\r\n  setPlaybackRate(rate) {\r\n    this.callPlayer(\"setPlaybackSpeed\", rate);\r\n  }\r\n  getDuration() {\r\n    return this.duration;\r\n  }\r\n  getCurrentTime() {\r\n    return this.callPlayer(\"currentTime\");\r\n  }\r\n  getSecondsLoaded() {\r\n    return null;\r\n  }\r\n  render() {\r\n    const { display } = this.props;\r\n    const style = {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display\r\n    };\r\n    return /* @__PURE__ */ import_react.default.createElement(\"div\", { style }, /* @__PURE__ */ import_react.default.createElement(\"div\", { ref: this.ref }));\r\n  }\r\n}\r\n__publicField(Vidyard, \"displayName\", \"Vidyard\");\r\n__publicField(Vidyard, \"canPlay\", import_patterns.canPlay.vidyard);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/players/Vidyard.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/players/Vimeo.js":
/*!********************************************************!*\
  !*** ./node_modules/react-player/lib/players/Vimeo.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar Vimeo_exports = {};\r\n__export(Vimeo_exports, {\r\n  default: () => Vimeo\r\n});\r\nmodule.exports = __toCommonJS(Vimeo_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\r\nvar import_utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/react-player/lib/utils.js\");\r\nvar import_patterns = __webpack_require__(/*! ../patterns */ \"(ssr)/./node_modules/react-player/lib/patterns.js\");\r\nconst SDK_URL = \"https://player.vimeo.com/api/player.js\";\r\nconst SDK_GLOBAL = \"Vimeo\";\r\nconst cleanUrl = (url) => {\r\n  return url.replace(\"/manage/videos\", \"\");\r\n};\r\nclass Vimeo extends import_react.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    // Prevent checking isLoading when URL changes\r\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\r\n    __publicField(this, \"duration\", null);\r\n    __publicField(this, \"currentTime\", null);\r\n    __publicField(this, \"secondsLoaded\", null);\r\n    __publicField(this, \"mute\", () => {\r\n      this.setMuted(true);\r\n    });\r\n    __publicField(this, \"unmute\", () => {\r\n      this.setMuted(false);\r\n    });\r\n    __publicField(this, \"ref\", (container) => {\r\n      this.container = container;\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onMount && this.props.onMount(this);\r\n  }\r\n  load(url) {\r\n    this.duration = null;\r\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then((Vimeo2) => {\r\n      if (!this.container)\r\n        return;\r\n      const { playerOptions, title } = this.props.config;\r\n      this.player = new Vimeo2.Player(this.container, {\r\n        url: cleanUrl(url),\r\n        autoplay: this.props.playing,\r\n        muted: this.props.muted,\r\n        loop: this.props.loop,\r\n        playsinline: this.props.playsinline,\r\n        controls: this.props.controls,\r\n        ...playerOptions\r\n      });\r\n      this.player.ready().then(() => {\r\n        const iframe = this.container.querySelector(\"iframe\");\r\n        iframe.style.width = \"100%\";\r\n        iframe.style.height = \"100%\";\r\n        if (title) {\r\n          iframe.title = title;\r\n        }\r\n      }).catch(this.props.onError);\r\n      this.player.on(\"loaded\", () => {\r\n        this.props.onReady();\r\n        this.refreshDuration();\r\n      });\r\n      this.player.on(\"play\", () => {\r\n        this.props.onPlay();\r\n        this.refreshDuration();\r\n      });\r\n      this.player.on(\"pause\", this.props.onPause);\r\n      this.player.on(\"seeked\", (e) => this.props.onSeek(e.seconds));\r\n      this.player.on(\"ended\", this.props.onEnded);\r\n      this.player.on(\"error\", this.props.onError);\r\n      this.player.on(\"timeupdate\", ({ seconds }) => {\r\n        this.currentTime = seconds;\r\n      });\r\n      this.player.on(\"progress\", ({ seconds }) => {\r\n        this.secondsLoaded = seconds;\r\n      });\r\n      this.player.on(\"bufferstart\", this.props.onBuffer);\r\n      this.player.on(\"bufferend\", this.props.onBufferEnd);\r\n      this.player.on(\"playbackratechange\", (e) => this.props.onPlaybackRateChange(e.playbackRate));\r\n    }, this.props.onError);\r\n  }\r\n  refreshDuration() {\r\n    this.player.getDuration().then((duration) => {\r\n      this.duration = duration;\r\n    });\r\n  }\r\n  play() {\r\n    const promise = this.callPlayer(\"play\");\r\n    if (promise) {\r\n      promise.catch(this.props.onError);\r\n    }\r\n  }\r\n  pause() {\r\n    this.callPlayer(\"pause\");\r\n  }\r\n  stop() {\r\n    this.callPlayer(\"unload\");\r\n  }\r\n  seekTo(seconds, keepPlaying = true) {\r\n    this.callPlayer(\"setCurrentTime\", seconds);\r\n    if (!keepPlaying) {\r\n      this.pause();\r\n    }\r\n  }\r\n  setVolume(fraction) {\r\n    this.callPlayer(\"setVolume\", fraction);\r\n  }\r\n  setMuted(muted) {\r\n    this.callPlayer(\"setMuted\", muted);\r\n  }\r\n  setLoop(loop) {\r\n    this.callPlayer(\"setLoop\", loop);\r\n  }\r\n  setPlaybackRate(rate) {\r\n    this.callPlayer(\"setPlaybackRate\", rate);\r\n  }\r\n  getDuration() {\r\n    return this.duration;\r\n  }\r\n  getCurrentTime() {\r\n    return this.currentTime;\r\n  }\r\n  getSecondsLoaded() {\r\n    return this.secondsLoaded;\r\n  }\r\n  render() {\r\n    const { display } = this.props;\r\n    const style = {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      overflow: \"hidden\",\r\n      display\r\n    };\r\n    return /* @__PURE__ */ import_react.default.createElement(\r\n      \"div\",\r\n      {\r\n        key: this.props.url,\r\n        ref: this.ref,\r\n        style\r\n      }\r\n    );\r\n  }\r\n}\r\n__publicField(Vimeo, \"displayName\", \"Vimeo\");\r\n__publicField(Vimeo, \"canPlay\", import_patterns.canPlay.vimeo);\r\n__publicField(Vimeo, \"forceLoad\", true);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/players/Vimeo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/players/Wistia.js":
/*!*********************************************************!*\
  !*** ./node_modules/react-player/lib/players/Wistia.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar Wistia_exports = {};\r\n__export(Wistia_exports, {\r\n  default: () => Wistia\r\n});\r\nmodule.exports = __toCommonJS(Wistia_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\r\nvar import_utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/react-player/lib/utils.js\");\r\nvar import_patterns = __webpack_require__(/*! ../patterns */ \"(ssr)/./node_modules/react-player/lib/patterns.js\");\r\nconst SDK_URL = \"https://fast.wistia.com/assets/external/E-v1.js\";\r\nconst SDK_GLOBAL = \"Wistia\";\r\nconst PLAYER_ID_PREFIX = \"wistia-player-\";\r\nclass Wistia extends import_react.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\r\n    __publicField(this, \"playerID\", this.props.config.playerId || `${PLAYER_ID_PREFIX}${(0, import_utils.randomString)()}`);\r\n    // Proxy methods to prevent listener leaks\r\n    __publicField(this, \"onPlay\", (...args) => this.props.onPlay(...args));\r\n    __publicField(this, \"onPause\", (...args) => this.props.onPause(...args));\r\n    __publicField(this, \"onSeek\", (...args) => this.props.onSeek(...args));\r\n    __publicField(this, \"onEnded\", (...args) => this.props.onEnded(...args));\r\n    __publicField(this, \"onPlaybackRateChange\", (...args) => this.props.onPlaybackRateChange(...args));\r\n    __publicField(this, \"mute\", () => {\r\n      this.callPlayer(\"mute\");\r\n    });\r\n    __publicField(this, \"unmute\", () => {\r\n      this.callPlayer(\"unmute\");\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onMount && this.props.onMount(this);\r\n  }\r\n  load(url) {\r\n    const { playing, muted, controls, onReady, config, onError } = this.props;\r\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then((Wistia2) => {\r\n      if (config.customControls) {\r\n        config.customControls.forEach((control) => Wistia2.defineControl(control));\r\n      }\r\n      window._wq = window._wq || [];\r\n      window._wq.push({\r\n        id: this.playerID,\r\n        options: {\r\n          autoPlay: playing,\r\n          silentAutoPlay: \"allow\",\r\n          muted,\r\n          controlsVisibleOnLoad: controls,\r\n          fullscreenButton: controls,\r\n          playbar: controls,\r\n          playbackRateControl: controls,\r\n          qualityControl: controls,\r\n          volumeControl: controls,\r\n          settingsControl: controls,\r\n          smallPlayButton: controls,\r\n          ...config.options\r\n        },\r\n        onReady: (player) => {\r\n          this.player = player;\r\n          this.unbind();\r\n          this.player.bind(\"play\", this.onPlay);\r\n          this.player.bind(\"pause\", this.onPause);\r\n          this.player.bind(\"seek\", this.onSeek);\r\n          this.player.bind(\"end\", this.onEnded);\r\n          this.player.bind(\"playbackratechange\", this.onPlaybackRateChange);\r\n          onReady();\r\n        }\r\n      });\r\n    }, onError);\r\n  }\r\n  unbind() {\r\n    this.player.unbind(\"play\", this.onPlay);\r\n    this.player.unbind(\"pause\", this.onPause);\r\n    this.player.unbind(\"seek\", this.onSeek);\r\n    this.player.unbind(\"end\", this.onEnded);\r\n    this.player.unbind(\"playbackratechange\", this.onPlaybackRateChange);\r\n  }\r\n  play() {\r\n    this.callPlayer(\"play\");\r\n  }\r\n  pause() {\r\n    this.callPlayer(\"pause\");\r\n  }\r\n  stop() {\r\n    this.unbind();\r\n    this.callPlayer(\"remove\");\r\n  }\r\n  seekTo(seconds, keepPlaying = true) {\r\n    this.callPlayer(\"time\", seconds);\r\n    if (!keepPlaying) {\r\n      this.pause();\r\n    }\r\n  }\r\n  setVolume(fraction) {\r\n    this.callPlayer(\"volume\", fraction);\r\n  }\r\n  setPlaybackRate(rate) {\r\n    this.callPlayer(\"playbackRate\", rate);\r\n  }\r\n  getDuration() {\r\n    return this.callPlayer(\"duration\");\r\n  }\r\n  getCurrentTime() {\r\n    return this.callPlayer(\"time\");\r\n  }\r\n  getSecondsLoaded() {\r\n    return null;\r\n  }\r\n  render() {\r\n    const { url } = this.props;\r\n    const videoID = url && url.match(import_patterns.MATCH_URL_WISTIA)[1];\r\n    const className = `wistia_embed wistia_async_${videoID}`;\r\n    const style = {\r\n      width: \"100%\",\r\n      height: \"100%\"\r\n    };\r\n    return /* @__PURE__ */ import_react.default.createElement(\"div\", { id: this.playerID, key: videoID, className, style });\r\n  }\r\n}\r\n__publicField(Wistia, \"displayName\", \"Wistia\");\r\n__publicField(Wistia, \"canPlay\", import_patterns.canPlay.wistia);\r\n__publicField(Wistia, \"loopOnEnded\", true);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/players/Wistia.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/players/YouTube.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-player/lib/players/YouTube.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar YouTube_exports = {};\r\n__export(YouTube_exports, {\r\n  default: () => YouTube\r\n});\r\nmodule.exports = __toCommonJS(YouTube_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\r\nvar import_utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/react-player/lib/utils.js\");\r\nvar import_patterns = __webpack_require__(/*! ../patterns */ \"(ssr)/./node_modules/react-player/lib/patterns.js\");\r\nconst SDK_URL = \"https://www.youtube.com/iframe_api\";\r\nconst SDK_GLOBAL = \"YT\";\r\nconst SDK_GLOBAL_READY = \"onYouTubeIframeAPIReady\";\r\nconst MATCH_PLAYLIST = /[?&](?:list|channel)=([a-zA-Z0-9_-]+)/;\r\nconst MATCH_USER_UPLOADS = /user\\/([a-zA-Z0-9_-]+)\\/?/;\r\nconst MATCH_NOCOOKIE = /youtube-nocookie\\.com/;\r\nconst NOCOOKIE_HOST = \"https://www.youtube-nocookie.com\";\r\nclass YouTube extends import_react.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\r\n    __publicField(this, \"parsePlaylist\", (url) => {\r\n      if (url instanceof Array) {\r\n        return {\r\n          listType: \"playlist\",\r\n          playlist: url.map(this.getID).join(\",\")\r\n        };\r\n      }\r\n      if (MATCH_PLAYLIST.test(url)) {\r\n        const [, playlistId] = url.match(MATCH_PLAYLIST);\r\n        return {\r\n          listType: \"playlist\",\r\n          list: playlistId.replace(/^UC/, \"UU\")\r\n        };\r\n      }\r\n      if (MATCH_USER_UPLOADS.test(url)) {\r\n        const [, username] = url.match(MATCH_USER_UPLOADS);\r\n        return {\r\n          listType: \"user_uploads\",\r\n          list: username\r\n        };\r\n      }\r\n      return {};\r\n    });\r\n    __publicField(this, \"onStateChange\", (event) => {\r\n      const { data } = event;\r\n      const { onPlay, onPause, onBuffer, onBufferEnd, onEnded, onReady, loop, config: { playerVars, onUnstarted } } = this.props;\r\n      const { UNSTARTED, PLAYING, PAUSED, BUFFERING, ENDED, CUED } = window[SDK_GLOBAL].PlayerState;\r\n      if (data === UNSTARTED)\r\n        onUnstarted();\r\n      if (data === PLAYING) {\r\n        onPlay();\r\n        onBufferEnd();\r\n      }\r\n      if (data === PAUSED)\r\n        onPause();\r\n      if (data === BUFFERING)\r\n        onBuffer();\r\n      if (data === ENDED) {\r\n        const isPlaylist = !!this.callPlayer(\"getPlaylist\");\r\n        if (loop && !isPlaylist) {\r\n          if (playerVars.start) {\r\n            this.seekTo(playerVars.start);\r\n          } else {\r\n            this.play();\r\n          }\r\n        }\r\n        onEnded();\r\n      }\r\n      if (data === CUED)\r\n        onReady();\r\n    });\r\n    __publicField(this, \"mute\", () => {\r\n      this.callPlayer(\"mute\");\r\n    });\r\n    __publicField(this, \"unmute\", () => {\r\n      this.callPlayer(\"unMute\");\r\n    });\r\n    __publicField(this, \"ref\", (container) => {\r\n      this.container = container;\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onMount && this.props.onMount(this);\r\n  }\r\n  getID(url) {\r\n    if (!url || url instanceof Array || MATCH_PLAYLIST.test(url)) {\r\n      return null;\r\n    }\r\n    return url.match(import_patterns.MATCH_URL_YOUTUBE)[1];\r\n  }\r\n  load(url, isReady) {\r\n    const { playing, muted, playsinline, controls, loop, config, onError } = this.props;\r\n    const { playerVars, embedOptions } = config;\r\n    const id = this.getID(url);\r\n    if (isReady) {\r\n      if (MATCH_PLAYLIST.test(url) || MATCH_USER_UPLOADS.test(url) || url instanceof Array) {\r\n        this.player.loadPlaylist(this.parsePlaylist(url));\r\n        return;\r\n      }\r\n      this.player.cueVideoById({\r\n        videoId: id,\r\n        startSeconds: (0, import_utils.parseStartTime)(url) || playerVars.start,\r\n        endSeconds: (0, import_utils.parseEndTime)(url) || playerVars.end\r\n      });\r\n      return;\r\n    }\r\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY, (YT) => YT.loaded).then((YT) => {\r\n      if (!this.container)\r\n        return;\r\n      this.player = new YT.Player(this.container, {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        videoId: id,\r\n        playerVars: {\r\n          autoplay: playing ? 1 : 0,\r\n          mute: muted ? 1 : 0,\r\n          controls: controls ? 1 : 0,\r\n          start: (0, import_utils.parseStartTime)(url),\r\n          end: (0, import_utils.parseEndTime)(url),\r\n          origin: window.location.origin,\r\n          playsinline: playsinline ? 1 : 0,\r\n          ...this.parsePlaylist(url),\r\n          ...playerVars\r\n        },\r\n        events: {\r\n          onReady: () => {\r\n            if (loop) {\r\n              this.player.setLoop(true);\r\n            }\r\n            this.props.onReady();\r\n          },\r\n          onPlaybackRateChange: (event) => this.props.onPlaybackRateChange(event.data),\r\n          onPlaybackQualityChange: (event) => this.props.onPlaybackQualityChange(event),\r\n          onStateChange: this.onStateChange,\r\n          onError: (event) => onError(event.data)\r\n        },\r\n        host: MATCH_NOCOOKIE.test(url) ? NOCOOKIE_HOST : void 0,\r\n        ...embedOptions\r\n      });\r\n    }, onError);\r\n    if (embedOptions.events) {\r\n      console.warn(\"Using `embedOptions.events` will likely break things. Use ReactPlayer\\u2019s callback props instead, eg onReady, onPlay, onPause\");\r\n    }\r\n  }\r\n  play() {\r\n    this.callPlayer(\"playVideo\");\r\n  }\r\n  pause() {\r\n    this.callPlayer(\"pauseVideo\");\r\n  }\r\n  stop() {\r\n    if (!document.body.contains(this.callPlayer(\"getIframe\")))\r\n      return;\r\n    this.callPlayer(\"stopVideo\");\r\n  }\r\n  seekTo(amount, keepPlaying = false) {\r\n    this.callPlayer(\"seekTo\", amount);\r\n    if (!keepPlaying && !this.props.playing) {\r\n      this.pause();\r\n    }\r\n  }\r\n  setVolume(fraction) {\r\n    this.callPlayer(\"setVolume\", fraction * 100);\r\n  }\r\n  setPlaybackRate(rate) {\r\n    this.callPlayer(\"setPlaybackRate\", rate);\r\n  }\r\n  setLoop(loop) {\r\n    this.callPlayer(\"setLoop\", loop);\r\n  }\r\n  getDuration() {\r\n    return this.callPlayer(\"getDuration\");\r\n  }\r\n  getCurrentTime() {\r\n    return this.callPlayer(\"getCurrentTime\");\r\n  }\r\n  getSecondsLoaded() {\r\n    return this.callPlayer(\"getVideoLoadedFraction\") * this.getDuration();\r\n  }\r\n  render() {\r\n    const { display } = this.props;\r\n    const style = {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display\r\n    };\r\n    return /* @__PURE__ */ import_react.default.createElement(\"div\", { style }, /* @__PURE__ */ import_react.default.createElement(\"div\", { ref: this.ref }));\r\n  }\r\n}\r\n__publicField(YouTube, \"displayName\", \"YouTube\");\r\n__publicField(YouTube, \"canPlay\", import_patterns.canPlay.youtube);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/players/YouTube.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/players/index.js":
/*!********************************************************!*\
  !*** ./node_modules/react-player/lib/players/index.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar players_exports = {};\r\n__export(players_exports, {\r\n  default: () => players_default\r\n});\r\nmodule.exports = __toCommonJS(players_exports);\r\nvar import_utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/react-player/lib/utils.js\");\r\nvar import_patterns = __webpack_require__(/*! ../patterns */ \"(ssr)/./node_modules/react-player/lib/patterns.js\");\r\nvar players_default = [\r\n  {\r\n    key: \"youtube\",\r\n    name: \"YouTube\",\r\n    canPlay: import_patterns.canPlay.youtube,\r\n    lazyPlayer: (0, import_utils.lazy)(() => __webpack_require__.e(/*! import() | reactPlayerYouTube */ \"vendor-chunks/react-player\").then(__webpack_require__.t.bind(__webpack_require__, /*! ./YouTube */ \"(ssr)/./node_modules/react-player/lib/players/YouTube.js\", 23)))\r\n  },\r\n  {\r\n    key: \"soundcloud\",\r\n    name: \"SoundCloud\",\r\n    canPlay: import_patterns.canPlay.soundcloud,\r\n    lazyPlayer: (0, import_utils.lazy)(() => __webpack_require__.e(/*! import() | reactPlayerSoundCloud */ \"vendor-chunks/react-player\").then(__webpack_require__.t.bind(__webpack_require__, /*! ./SoundCloud */ \"(ssr)/./node_modules/react-player/lib/players/SoundCloud.js\", 23)))\r\n  },\r\n  {\r\n    key: \"vimeo\",\r\n    name: \"Vimeo\",\r\n    canPlay: import_patterns.canPlay.vimeo,\r\n    lazyPlayer: (0, import_utils.lazy)(() => __webpack_require__.e(/*! import() | reactPlayerVimeo */ \"vendor-chunks/react-player\").then(__webpack_require__.t.bind(__webpack_require__, /*! ./Vimeo */ \"(ssr)/./node_modules/react-player/lib/players/Vimeo.js\", 23)))\r\n  },\r\n  {\r\n    key: \"mux\",\r\n    name: \"Mux\",\r\n    canPlay: import_patterns.canPlay.mux,\r\n    lazyPlayer: (0, import_utils.lazy)(() => __webpack_require__.e(/*! import() | reactPlayerMux */ \"vendor-chunks/react-player\").then(__webpack_require__.t.bind(__webpack_require__, /*! ./Mux */ \"(ssr)/./node_modules/react-player/lib/players/Mux.js\", 23)))\r\n  },\r\n  {\r\n    key: \"facebook\",\r\n    name: \"Facebook\",\r\n    canPlay: import_patterns.canPlay.facebook,\r\n    lazyPlayer: (0, import_utils.lazy)(() => __webpack_require__.e(/*! import() | reactPlayerFacebook */ \"vendor-chunks/react-player\").then(__webpack_require__.t.bind(__webpack_require__, /*! ./Facebook */ \"(ssr)/./node_modules/react-player/lib/players/Facebook.js\", 23)))\r\n  },\r\n  {\r\n    key: \"streamable\",\r\n    name: \"Streamable\",\r\n    canPlay: import_patterns.canPlay.streamable,\r\n    lazyPlayer: (0, import_utils.lazy)(() => __webpack_require__.e(/*! import() | reactPlayerStreamable */ \"vendor-chunks/react-player\").then(__webpack_require__.t.bind(__webpack_require__, /*! ./Streamable */ \"(ssr)/./node_modules/react-player/lib/players/Streamable.js\", 23)))\r\n  },\r\n  {\r\n    key: \"wistia\",\r\n    name: \"Wistia\",\r\n    canPlay: import_patterns.canPlay.wistia,\r\n    lazyPlayer: (0, import_utils.lazy)(() => __webpack_require__.e(/*! import() | reactPlayerWistia */ \"vendor-chunks/react-player\").then(__webpack_require__.t.bind(__webpack_require__, /*! ./Wistia */ \"(ssr)/./node_modules/react-player/lib/players/Wistia.js\", 23)))\r\n  },\r\n  {\r\n    key: \"twitch\",\r\n    name: \"Twitch\",\r\n    canPlay: import_patterns.canPlay.twitch,\r\n    lazyPlayer: (0, import_utils.lazy)(() => __webpack_require__.e(/*! import() | reactPlayerTwitch */ \"vendor-chunks/react-player\").then(__webpack_require__.t.bind(__webpack_require__, /*! ./Twitch */ \"(ssr)/./node_modules/react-player/lib/players/Twitch.js\", 23)))\r\n  },\r\n  {\r\n    key: \"dailymotion\",\r\n    name: \"DailyMotion\",\r\n    canPlay: import_patterns.canPlay.dailymotion,\r\n    lazyPlayer: (0, import_utils.lazy)(() => __webpack_require__.e(/*! import() | reactPlayerDailyMotion */ \"vendor-chunks/react-player\").then(__webpack_require__.t.bind(__webpack_require__, /*! ./DailyMotion */ \"(ssr)/./node_modules/react-player/lib/players/DailyMotion.js\", 23)))\r\n  },\r\n  {\r\n    key: \"mixcloud\",\r\n    name: \"Mixcloud\",\r\n    canPlay: import_patterns.canPlay.mixcloud,\r\n    lazyPlayer: (0, import_utils.lazy)(() => __webpack_require__.e(/*! import() | reactPlayerMixcloud */ \"vendor-chunks/react-player\").then(__webpack_require__.t.bind(__webpack_require__, /*! ./Mixcloud */ \"(ssr)/./node_modules/react-player/lib/players/Mixcloud.js\", 23)))\r\n  },\r\n  {\r\n    key: \"vidyard\",\r\n    name: \"Vidyard\",\r\n    canPlay: import_patterns.canPlay.vidyard,\r\n    lazyPlayer: (0, import_utils.lazy)(() => __webpack_require__.e(/*! import() | reactPlayerVidyard */ \"vendor-chunks/react-player\").then(__webpack_require__.t.bind(__webpack_require__, /*! ./Vidyard */ \"(ssr)/./node_modules/react-player/lib/players/Vidyard.js\", 23)))\r\n  },\r\n  {\r\n    key: \"kaltura\",\r\n    name: \"Kaltura\",\r\n    canPlay: import_patterns.canPlay.kaltura,\r\n    lazyPlayer: (0, import_utils.lazy)(() => __webpack_require__.e(/*! import() | reactPlayerKaltura */ \"vendor-chunks/react-player\").then(__webpack_require__.t.bind(__webpack_require__, /*! ./Kaltura */ \"(ssr)/./node_modules/react-player/lib/players/Kaltura.js\", 23)))\r\n  },\r\n  {\r\n    key: \"file\",\r\n    name: \"FilePlayer\",\r\n    canPlay: import_patterns.canPlay.file,\r\n    canEnablePIP: (url) => {\r\n      return import_patterns.canPlay.file(url) && (document.pictureInPictureEnabled || (0, import_utils.supportsWebKitPresentationMode)()) && !import_patterns.AUDIO_EXTENSIONS.test(url);\r\n    },\r\n    lazyPlayer: (0, import_utils.lazy)(() => __webpack_require__.e(/*! import() | reactPlayerFilePlayer */ \"vendor-chunks/react-player\").then(__webpack_require__.t.bind(__webpack_require__, /*! ./FilePlayer */ \"(ssr)/./node_modules/react-player/lib/players/FilePlayer.js\", 23)))\r\n  }\r\n];\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/players/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/props.js":
/*!************************************************!*\
  !*** ./node_modules/react-player/lib/props.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar props_exports = {};\r\n__export(props_exports, {\r\n  defaultProps: () => defaultProps,\r\n  propTypes: () => propTypes\r\n});\r\nmodule.exports = __toCommonJS(props_exports);\r\nvar import_prop_types = __toESM(__webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\"));\r\nconst { string, bool, number, array, oneOfType, shape, object, func, node } = import_prop_types.default;\r\nconst propTypes = {\r\n  url: oneOfType([string, array, object]),\r\n  playing: bool,\r\n  loop: bool,\r\n  controls: bool,\r\n  volume: number,\r\n  muted: bool,\r\n  playbackRate: number,\r\n  width: oneOfType([string, number]),\r\n  height: oneOfType([string, number]),\r\n  style: object,\r\n  progressInterval: number,\r\n  playsinline: bool,\r\n  pip: bool,\r\n  stopOnUnmount: bool,\r\n  light: oneOfType([bool, string, object]),\r\n  playIcon: node,\r\n  previewTabIndex: number,\r\n  previewAriaLabel: string,\r\n  fallback: node,\r\n  oEmbedUrl: string,\r\n  wrapper: oneOfType([\r\n    string,\r\n    func,\r\n    shape({ render: func.isRequired })\r\n  ]),\r\n  config: shape({\r\n    soundcloud: shape({\r\n      options: object\r\n    }),\r\n    youtube: shape({\r\n      playerVars: object,\r\n      embedOptions: object,\r\n      onUnstarted: func\r\n    }),\r\n    facebook: shape({\r\n      appId: string,\r\n      version: string,\r\n      playerId: string,\r\n      attributes: object\r\n    }),\r\n    dailymotion: shape({\r\n      params: object\r\n    }),\r\n    vimeo: shape({\r\n      playerOptions: object,\r\n      title: string\r\n    }),\r\n    mux: shape({\r\n      attributes: object,\r\n      version: string\r\n    }),\r\n    file: shape({\r\n      attributes: object,\r\n      tracks: array,\r\n      forceVideo: bool,\r\n      forceAudio: bool,\r\n      forceHLS: bool,\r\n      forceSafariHLS: bool,\r\n      forceDisableHls: bool,\r\n      forceDASH: bool,\r\n      forceFLV: bool,\r\n      hlsOptions: object,\r\n      hlsVersion: string,\r\n      dashVersion: string,\r\n      flvVersion: string\r\n    }),\r\n    wistia: shape({\r\n      options: object,\r\n      playerId: string,\r\n      customControls: array\r\n    }),\r\n    mixcloud: shape({\r\n      options: object\r\n    }),\r\n    twitch: shape({\r\n      options: object,\r\n      playerId: string\r\n    }),\r\n    vidyard: shape({\r\n      options: object\r\n    })\r\n  }),\r\n  onReady: func,\r\n  onStart: func,\r\n  onPlay: func,\r\n  onPause: func,\r\n  onBuffer: func,\r\n  onBufferEnd: func,\r\n  onEnded: func,\r\n  onError: func,\r\n  onDuration: func,\r\n  onSeek: func,\r\n  onPlaybackRateChange: func,\r\n  onPlaybackQualityChange: func,\r\n  onProgress: func,\r\n  onClickPreview: func,\r\n  onEnablePIP: func,\r\n  onDisablePIP: func\r\n};\r\nconst noop = () => {\r\n};\r\nconst defaultProps = {\r\n  playing: false,\r\n  loop: false,\r\n  controls: false,\r\n  volume: null,\r\n  muted: false,\r\n  playbackRate: 1,\r\n  width: \"640px\",\r\n  height: \"360px\",\r\n  style: {},\r\n  progressInterval: 1e3,\r\n  playsinline: false,\r\n  pip: false,\r\n  stopOnUnmount: true,\r\n  light: false,\r\n  fallback: null,\r\n  wrapper: \"div\",\r\n  previewTabIndex: 0,\r\n  previewAriaLabel: \"\",\r\n  oEmbedUrl: \"https://noembed.com/embed?url={url}\",\r\n  config: {\r\n    soundcloud: {\r\n      options: {\r\n        visual: true,\r\n        // Undocumented, but makes player fill container and look better\r\n        buying: false,\r\n        liking: false,\r\n        download: false,\r\n        sharing: false,\r\n        show_comments: false,\r\n        show_playcount: false\r\n      }\r\n    },\r\n    youtube: {\r\n      playerVars: {\r\n        playsinline: 1,\r\n        showinfo: 0,\r\n        rel: 0,\r\n        iv_load_policy: 3,\r\n        modestbranding: 1\r\n      },\r\n      embedOptions: {},\r\n      onUnstarted: noop\r\n    },\r\n    facebook: {\r\n      appId: \"1309697205772819\",\r\n      version: \"v3.3\",\r\n      playerId: null,\r\n      attributes: {}\r\n    },\r\n    dailymotion: {\r\n      params: {\r\n        api: 1,\r\n        \"endscreen-enable\": false\r\n      }\r\n    },\r\n    vimeo: {\r\n      playerOptions: {\r\n        autopause: false,\r\n        byline: false,\r\n        portrait: false,\r\n        title: false\r\n      },\r\n      title: null\r\n    },\r\n    mux: {\r\n      attributes: {},\r\n      version: \"2\"\r\n    },\r\n    file: {\r\n      attributes: {},\r\n      tracks: [],\r\n      forceVideo: false,\r\n      forceAudio: false,\r\n      forceHLS: false,\r\n      forceDASH: false,\r\n      forceFLV: false,\r\n      hlsOptions: {},\r\n      hlsVersion: \"1.1.4\",\r\n      dashVersion: \"3.1.3\",\r\n      flvVersion: \"1.5.0\",\r\n      forceDisableHls: false\r\n    },\r\n    wistia: {\r\n      options: {},\r\n      playerId: null,\r\n      customControls: null\r\n    },\r\n    mixcloud: {\r\n      options: {\r\n        hide_cover: 1\r\n      }\r\n    },\r\n    twitch: {\r\n      options: {},\r\n      playerId: null\r\n    },\r\n    vidyard: {\r\n      options: {}\r\n    }\r\n  },\r\n  onReady: noop,\r\n  onStart: noop,\r\n  onPlay: noop,\r\n  onPause: noop,\r\n  onBuffer: noop,\r\n  onBufferEnd: noop,\r\n  onEnded: noop,\r\n  onError: noop,\r\n  onDuration: noop,\r\n  onSeek: noop,\r\n  onPlaybackRateChange: noop,\r\n  onPlaybackQualityChange: noop,\r\n  onProgress: noop,\r\n  onClickPreview: noop,\r\n  onEnablePIP: noop,\r\n  onDisablePIP: noop\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/props.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-player/lib/utils.js":
/*!************************************************!*\
  !*** ./node_modules/react-player/lib/utils.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar utils_exports = {};\r\n__export(utils_exports, {\r\n  callPlayer: () => callPlayer,\r\n  getConfig: () => getConfig,\r\n  getSDK: () => getSDK,\r\n  isBlobUrl: () => isBlobUrl,\r\n  isMediaStream: () => isMediaStream,\r\n  lazy: () => lazy,\r\n  omit: () => omit,\r\n  parseEndTime: () => parseEndTime,\r\n  parseStartTime: () => parseStartTime,\r\n  queryString: () => queryString,\r\n  randomString: () => randomString,\r\n  supportsWebKitPresentationMode: () => supportsWebKitPresentationMode\r\n});\r\nmodule.exports = __toCommonJS(utils_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\r\nvar import_load_script = __toESM(__webpack_require__(/*! load-script */ \"(ssr)/./node_modules/load-script/index.js\"));\r\nvar import_deepmerge = __toESM(__webpack_require__(/*! deepmerge */ \"(ssr)/./node_modules/deepmerge/dist/cjs.js\"));\r\nconst lazy = (componentImportFn) => import_react.default.lazy(async () => {\r\n  const obj = await componentImportFn();\r\n  return typeof obj.default === \"function\" ? obj : obj.default;\r\n});\r\nconst MATCH_START_QUERY = /[?&#](?:start|t)=([0-9hms]+)/;\r\nconst MATCH_END_QUERY = /[?&#]end=([0-9hms]+)/;\r\nconst MATCH_START_STAMP = /(\\d+)(h|m|s)/g;\r\nconst MATCH_NUMERIC = /^\\d+$/;\r\nfunction parseTimeParam(url, pattern) {\r\n  if (url instanceof Array) {\r\n    return void 0;\r\n  }\r\n  const match = url.match(pattern);\r\n  if (match) {\r\n    const stamp = match[1];\r\n    if (stamp.match(MATCH_START_STAMP)) {\r\n      return parseTimeString(stamp);\r\n    }\r\n    if (MATCH_NUMERIC.test(stamp)) {\r\n      return parseInt(stamp);\r\n    }\r\n  }\r\n  return void 0;\r\n}\r\nfunction parseTimeString(stamp) {\r\n  let seconds = 0;\r\n  let array = MATCH_START_STAMP.exec(stamp);\r\n  while (array !== null) {\r\n    const [, count, period] = array;\r\n    if (period === \"h\")\r\n      seconds += parseInt(count, 10) * 60 * 60;\r\n    if (period === \"m\")\r\n      seconds += parseInt(count, 10) * 60;\r\n    if (period === \"s\")\r\n      seconds += parseInt(count, 10);\r\n    array = MATCH_START_STAMP.exec(stamp);\r\n  }\r\n  return seconds;\r\n}\r\nfunction parseStartTime(url) {\r\n  return parseTimeParam(url, MATCH_START_QUERY);\r\n}\r\nfunction parseEndTime(url) {\r\n  return parseTimeParam(url, MATCH_END_QUERY);\r\n}\r\nfunction randomString() {\r\n  return Math.random().toString(36).substr(2, 5);\r\n}\r\nfunction queryString(object) {\r\n  return Object.keys(object).map((key) => `${key}=${object[key]}`).join(\"&\");\r\n}\r\nfunction getGlobal(key) {\r\n  if (window[key]) {\r\n    return window[key];\r\n  }\r\n  if (window.exports && window.exports[key]) {\r\n    return window.exports[key];\r\n  }\r\n  if (window.module && window.module.exports && window.module.exports[key]) {\r\n    return window.module.exports[key];\r\n  }\r\n  return null;\r\n}\r\nconst requests = {};\r\nconst getSDK = enableStubOn(function getSDK2(url, sdkGlobal, sdkReady = null, isLoaded = () => true, fetchScript = import_load_script.default) {\r\n  const existingGlobal = getGlobal(sdkGlobal);\r\n  if (existingGlobal && isLoaded(existingGlobal)) {\r\n    return Promise.resolve(existingGlobal);\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    if (requests[url]) {\r\n      requests[url].push({ resolve, reject });\r\n      return;\r\n    }\r\n    requests[url] = [{ resolve, reject }];\r\n    const onLoaded = (sdk) => {\r\n      requests[url].forEach((request) => request.resolve(sdk));\r\n    };\r\n    if (sdkReady) {\r\n      const previousOnReady = window[sdkReady];\r\n      window[sdkReady] = function() {\r\n        if (previousOnReady)\r\n          previousOnReady();\r\n        onLoaded(getGlobal(sdkGlobal));\r\n      };\r\n    }\r\n    fetchScript(url, (err) => {\r\n      if (err) {\r\n        requests[url].forEach((request) => request.reject(err));\r\n        requests[url] = null;\r\n      } else if (!sdkReady) {\r\n        onLoaded(getGlobal(sdkGlobal));\r\n      }\r\n    });\r\n  });\r\n});\r\nfunction getConfig(props, defaultProps) {\r\n  return (0, import_deepmerge.default)(defaultProps.config, props.config);\r\n}\r\nfunction omit(object, ...arrays) {\r\n  const omitKeys = [].concat(...arrays);\r\n  const output = {};\r\n  const keys = Object.keys(object);\r\n  for (const key of keys) {\r\n    if (omitKeys.indexOf(key) === -1) {\r\n      output[key] = object[key];\r\n    }\r\n  }\r\n  return output;\r\n}\r\nfunction callPlayer(method, ...args) {\r\n  if (!this.player || !this.player[method]) {\r\n    let message = `ReactPlayer: ${this.constructor.displayName} player could not call %c${method}%c \\u2013 `;\r\n    if (!this.player) {\r\n      message += \"The player was not available\";\r\n    } else if (!this.player[method]) {\r\n      message += \"The method was not available\";\r\n    }\r\n    console.warn(message, \"font-weight: bold\", \"\");\r\n    return null;\r\n  }\r\n  return this.player[method](...args);\r\n}\r\nfunction isMediaStream(url) {\r\n  return typeof window !== \"undefined\" && typeof window.MediaStream !== \"undefined\" && url instanceof window.MediaStream;\r\n}\r\nfunction isBlobUrl(url) {\r\n  return /^blob:/.test(url);\r\n}\r\nfunction supportsWebKitPresentationMode(video = document.createElement(\"video\")) {\r\n  const notMobile = /iPhone|iPod/.test(navigator.userAgent) === false;\r\n  return video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === \"function\" && notMobile;\r\n}\r\nfunction enableStubOn(fn) {\r\n  if (false) {}\r\n  return fn;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-player/lib/utils.js\n");

/***/ })

};
;